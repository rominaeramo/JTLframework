%%%%%%%%%%%%%%%%%%%
%%%% A02saveccm %%%
%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%% RELATIONS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

#const mmt = _x_saveccm.

	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_//@correspondences.9",bx,bx).
relation("_x_//@correspondences.9", _x_saveccm, _x_DataOut).
relation("_x_//@correspondences.9", _x_A0, _x_SAinterface).
:- node(_x_saveccm, ID, _x_DataOut), not node'(_x_A0, ID, _x_SAinterface), mmt==_x_A0.
	relation("_x_//@correspondences.9/@featureEquivalences.0",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_//@correspondences.9/@featureEquivalences.0", _x_saveccm, _x_name, _x_DataOut).
	relation("_x_//@correspondences.9/@featureEquivalences.0", _x_A0, _x_name, _x_SAinterface).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_DataOut),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_DataOut),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAinterface),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_DataOut), mmt==_x_saveccm.


	%%%% node 2 node (Left2RightCorrespondence) %%%%
relation("_x_//@correspondences.141",_x_saveccm,_x_A0).
relation("_x_//@correspondences.141", _x_saveccm, _x_System).
relation("_x_//@correspondences.141", _x_A0, _x_SoftwareArchitecture).
:- node(_x_saveccm, ID, _x_System), not node'(_x_A0, ID, _x_SoftwareArchitecture), mmt==_x_A0.
:- node(_x_A0, ID, _x_SoftwareArchitecture), node'(_x_saveccm, ID, _x_System), mmt==_x_saveccm.
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.0",_x_saveccm,_x_A0).
	%%%% prop 2 prop %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.0", _x_saveccm, _x_name, _x_System).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.0", _x_A0, _x_name, _x_SoftwareArchitecture).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_System),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SoftwareArchitecture), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_System),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SoftwareArchitecture), mmt==_x_A0.
	%% for each prop, prop' must not exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SoftwareArchitecture),
	prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_System), mmt==_x_saveccm.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SoftwareArchitecture),
	prop'(_x_saveccm, ID, IDmc, _x_name, Value), not node'(_x_saveccm, IDmc, _x_System), mmt==_x_saveccm.

	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.1",_x_saveccm,_x_A0).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.111", _x_saveccm, _x_compose, _x_System, _x_Assembly).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.111", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SABinding).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Assembly),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SABinding),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Assembly),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SABinding), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SABinding),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Assembly), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.112", _x_saveccm, _x_compose, _x_System, _x_Assembly).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.112", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Assembly),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Assembly),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAchannel), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAchannel),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Assembly), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.113", _x_saveccm, _x_compose, _x_System, _x_Assembly).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.113", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Assembly),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Assembly),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SArelationship), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SArelationship),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Assembly), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.114", _x_saveccm, _x_compose, _x_System, _x_Assembly).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.114", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Assembly),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Assembly),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Assembly), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.115", _x_saveccm, _x_compose, _x_System, _x_Assembly).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.115", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Assembly),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Assembly),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Assembly), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.116", _x_saveccm, _x_compose, _x_System, _x_Assembly).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.116", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Assembly),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Assembly),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Assembly), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.121", _x_saveccm, _x_compose, _x_System, _x_System).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.121", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SABinding).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_System),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SABinding),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_System),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SABinding), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SABinding),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_System), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.122", _x_saveccm, _x_compose, _x_System, _x_System).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.122", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_System),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_System),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAchannel), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAchannel),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_System), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.123", _x_saveccm, _x_compose, _x_System, _x_System).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.123", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_System),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_System),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SArelationship), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SArelationship),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_System), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.124", _x_saveccm, _x_compose, _x_System, _x_System).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.124", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_System),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_System),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_System), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.125", _x_saveccm, _x_compose, _x_System, _x_System).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.125", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_System),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_System),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_System), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.126", _x_saveccm, _x_compose, _x_System, _x_System).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.126", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_System),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_System),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_System), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.131", _x_saveccm, _x_compose, _x_System, _x_Clock).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.131", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SABinding).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Clock),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SABinding),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Clock),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SABinding), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SABinding),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Clock), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.132", _x_saveccm, _x_compose, _x_System, _x_Clock).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.132", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Clock),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Clock),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAchannel), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAchannel),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Clock), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.133", _x_saveccm, _x_compose, _x_System, _x_Clock).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.133", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Clock),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Clock),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SArelationship), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SArelationship),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Clock), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.134", _x_saveccm, _x_compose, _x_System, _x_Clock).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.134", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Clock),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Clock),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Clock), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.135", _x_saveccm, _x_compose, _x_System, _x_Clock).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.135", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Clock),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Clock),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Clock), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.136", _x_saveccm, _x_compose, _x_System, _x_Clock).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.136", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Clock),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Clock),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Clock), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.141", _x_saveccm, _x_compose, _x_System, _x_Switch).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.141", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SABinding).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Switch),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SABinding),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Switch),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SABinding), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SABinding),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Switch), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.142", _x_saveccm, _x_compose, _x_System, _x_Switch).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.142", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Switch),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Switch),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAchannel), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAchannel),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Switch), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.143", _x_saveccm, _x_compose, _x_System, _x_Switch).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.143", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Switch),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Switch),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SArelationship), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SArelationship),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Switch), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.144", _x_saveccm, _x_compose, _x_System, _x_Switch).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.144", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Switch),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Switch),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Switch), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.145", _x_saveccm, _x_compose, _x_System, _x_Switch).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.145", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Switch),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Switch),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Switch), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.146", _x_saveccm, _x_compose, _x_System, _x_Switch).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.146", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Switch),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Switch),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Switch), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.151", _x_saveccm, _x_compose, _x_System, _x_Composite).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.151", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SABinding).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Composite),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SABinding),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Composite),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SABinding), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SABinding),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Composite), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.152", _x_saveccm, _x_compose, _x_System, _x_Composite).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.152", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Composite),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Composite),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAchannel), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAchannel),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Composite), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.153", _x_saveccm, _x_compose, _x_System, _x_Composite).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.153", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Composite),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Composite),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SArelationship), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SArelationship),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Composite), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.154", _x_saveccm, _x_compose, _x_System, _x_Composite).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.154", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Composite),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Composite),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Composite), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.155", _x_saveccm, _x_compose, _x_System, _x_Composite).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.155", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Composite),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Composite),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Composite), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.156", _x_saveccm, _x_compose, _x_System, _x_Composite).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.156", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Composite),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Composite),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Composite), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.161", _x_saveccm, _x_compose, _x_System, _x_Component).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.161", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SABinding).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Component),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SABinding),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Component),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SABinding), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SABinding),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Component), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.162", _x_saveccm, _x_compose, _x_System, _x_Component).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.162", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Component),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Component),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAchannel), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAchannel),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Component), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.163", _x_saveccm, _x_compose, _x_System, _x_Component).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.163", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Component),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Component),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SArelationship), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SArelationship),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Component), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.164", _x_saveccm, _x_compose, _x_System, _x_Component).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.164", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Component),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Component),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Component), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.165", _x_saveccm, _x_compose, _x_System, _x_Component).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.165", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Component),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Component),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Component), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.166", _x_saveccm, _x_compose, _x_System, _x_Component).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.166", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Component),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Component),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Component), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.171", _x_saveccm, _x_compose, _x_System, _x_Delay).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.171", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SABinding).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Delay),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SABinding),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delay),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SABinding), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SABinding),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delay), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.172", _x_saveccm, _x_compose, _x_System, _x_Delay).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.172", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Delay),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delay),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAchannel), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAchannel),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delay), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.173", _x_saveccm, _x_compose, _x_System, _x_Delay).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.173", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Delay),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delay),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SArelationship), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SArelationship),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delay), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.174", _x_saveccm, _x_compose, _x_System, _x_Delay).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.174", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Delay),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delay),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delay), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.175", _x_saveccm, _x_compose, _x_System, _x_Delay).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.175", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Delay),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delay),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delay), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.176", _x_saveccm, _x_compose, _x_System, _x_Delay).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.176", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_compose, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Delay),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delay),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_compose, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delay), mmt==_x_saveccm.
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.2",_x_saveccm,_x_A0).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.211", _x_saveccm, _x_connects, _x_System, _x_Delegation).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.211", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SABinding).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Delegation),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SABinding),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delegation),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SABinding), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SABinding),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delegation), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.212", _x_saveccm, _x_connects, _x_System, _x_Delegation).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.212", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Delegation),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delegation),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAchannel), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAchannel),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delegation), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.213", _x_saveccm, _x_connects, _x_System, _x_Delegation).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.213", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Delegation),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delegation),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SArelationship), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SArelationship),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delegation), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.214", _x_saveccm, _x_connects, _x_System, _x_Delegation).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.214", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Delegation),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delegation),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delegation), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.215", _x_saveccm, _x_connects, _x_System, _x_Delegation).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.215", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Delegation),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delegation),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delegation), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.216", _x_saveccm, _x_connects, _x_System, _x_Delegation).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.216", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Delegation),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Delegation),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Delegation), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.221", _x_saveccm, _x_connects, _x_System, _x_Connection).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.221", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SABinding).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Connection),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SABinding),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Connection),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SABinding), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SABinding),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Connection), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.222", _x_saveccm, _x_connects, _x_System, _x_Connection).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.222", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Connection),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Connection),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAchannel), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAchannel),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Connection), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.223", _x_saveccm, _x_connects, _x_System, _x_Connection).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.223", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Connection),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Connection),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SArelationship), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SArelationship),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Connection), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.224", _x_saveccm, _x_connects, _x_System, _x_Connection).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.224", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Connection),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Connection),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Connection), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.225", _x_saveccm, _x_connects, _x_System, _x_Connection).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.225", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Connection),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Connection),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Connection), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.226", _x_saveccm, _x_connects, _x_System, _x_Connection).
	relation("_x_//@correspondences.14/@right.0/@featureEquivalences.226", _x_A0, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_subElement, IDS, IDT),
	edge(_x_saveccm, ID, _x_connects, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Connection),
	metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_System), node(_x_saveccm, IDT, _x_Connection),
	node'(_x_A0, IDS, _x_SoftwareArchitecture), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_connects, IDS, IDT),
	edge(_x_A0, ID, _x_subElement, IDS, IDT),
	node(_x_A0, IDS, _x_SoftwareArchitecture), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_System), node'(_x_saveccm, IDT, _x_Connection), mmt==_x_saveccm.

	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_//@correspondences.3",bx,bx).
relation("_x_//@correspondences.3", _x_saveccm, _x_Clock).
relation("_x_//@correspondences.3", _x_A0, _x_SAcomponent).
:- node(_x_saveccm, ID, _x_Clock), not node'(_x_A0, ID, _x_SAcomponent), mmt==_x_A0.
	relation("_x_//@correspondences.3/@featureEquivalences.0",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_//@correspondences.3/@featureEquivalences.0", _x_saveccm, _x_name, _x_Clock).
	relation("_x_//@correspondences.3/@featureEquivalences.0", _x_A0, _x_name, _x_SAcomponent).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Clock),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAcomponent), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Clock),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAcomponent), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAcomponent),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_Clock), mmt==_x_saveccm.

	relation("_x_//@correspondences.3/@featureEquivalences.1",bx,bx).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.3/@featureEquivalences.111", _x_saveccm, _x_offer, _x_Clock, _x_DataIn).
	relation("_x_//@correspondences.3/@featureEquivalences.111", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_DataIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Clock), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Clock), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.3/@featureEquivalences.121", _x_saveccm, _x_offer, _x_Clock, _x_TriggerIn).
	relation("_x_//@correspondences.3/@featureEquivalences.121", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_TriggerIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Clock), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Clock), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.3/@featureEquivalences.131", _x_saveccm, _x_offer, _x_Clock, _x_CombinedIn).
	relation("_x_//@correspondences.3/@featureEquivalences.131", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_CombinedIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Clock), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Clock), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.3/@featureEquivalences.141", _x_saveccm, _x_offer, _x_Clock, _x_TriggerOut).
	relation("_x_//@correspondences.3/@featureEquivalences.141", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_TriggerOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Clock), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Clock), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.3/@featureEquivalences.151", _x_saveccm, _x_offer, _x_Clock, _x_CombinedOut).
	relation("_x_//@correspondences.3/@featureEquivalences.151", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_CombinedOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Clock), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Clock), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.3/@featureEquivalences.161", _x_saveccm, _x_offer, _x_Clock, _x_DataOut).
	relation("_x_//@correspondences.3/@featureEquivalences.161", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_DataOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Clock), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Clock), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.

	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_EquivalenceCorrespondence1",bx,bx).
relation("_x_EquivalenceCorrespondence1", _x_saveccm, _x_Delegation).
relation("_x_EquivalenceCorrespondence1", _x_A0, _x_SABinding).
:- node(_x_saveccm, ID, _x_Delegation), not node'(_x_A0, ID, _x_SABinding), mmt==_x_A0.
:- node(_x_A0, ID, _x_SABinding), not node'(_x_saveccm, ID, _x_Delegation), mmt==_x_saveccm.
	relation("_x_//@correspondences.12/@featureEquivalences.0",bx,bx).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.011", _x_saveccm, _x_source, _x_Delegation, _x_DataIn).
	relation("_x_//@correspondences.12/@featureEquivalences.011", _x_A0, _x_from, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_DataIn),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.012", _x_saveccm, _x_source, _x_Delegation, _x_DataIn).
	relation("_x_//@correspondences.12/@featureEquivalences.012", _x_A0, _x_from, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_DataIn),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.013", _x_saveccm, _x_source, _x_Delegation, _x_DataIn).
	relation("_x_//@correspondences.12/@featureEquivalences.013", _x_A0, _x_from, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_DataIn),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.021", _x_saveccm, _x_source, _x_Delegation, _x_TriggerIn).
	relation("_x_//@correspondences.12/@featureEquivalences.021", _x_A0, _x_from, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_TriggerIn),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.022", _x_saveccm, _x_source, _x_Delegation, _x_TriggerIn).
	relation("_x_//@correspondences.12/@featureEquivalences.022", _x_A0, _x_from, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_TriggerIn),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.023", _x_saveccm, _x_source, _x_Delegation, _x_TriggerIn).
	relation("_x_//@correspondences.12/@featureEquivalences.023", _x_A0, _x_from, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_TriggerIn),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.031", _x_saveccm, _x_source, _x_Delegation, _x_CombinedIn).
	relation("_x_//@correspondences.12/@featureEquivalences.031", _x_A0, _x_from, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_CombinedIn),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.032", _x_saveccm, _x_source, _x_Delegation, _x_CombinedIn).
	relation("_x_//@correspondences.12/@featureEquivalences.032", _x_A0, _x_from, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_CombinedIn),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.033", _x_saveccm, _x_source, _x_Delegation, _x_CombinedIn).
	relation("_x_//@correspondences.12/@featureEquivalences.033", _x_A0, _x_from, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_CombinedIn),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.041", _x_saveccm, _x_source, _x_Delegation, _x_TriggerOut).
	relation("_x_//@correspondences.12/@featureEquivalences.041", _x_A0, _x_from, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_TriggerOut),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.042", _x_saveccm, _x_source, _x_Delegation, _x_TriggerOut).
	relation("_x_//@correspondences.12/@featureEquivalences.042", _x_A0, _x_from, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_TriggerOut),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.043", _x_saveccm, _x_source, _x_Delegation, _x_TriggerOut).
	relation("_x_//@correspondences.12/@featureEquivalences.043", _x_A0, _x_from, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_TriggerOut),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.051", _x_saveccm, _x_source, _x_Delegation, _x_CombinedOut).
	relation("_x_//@correspondences.12/@featureEquivalences.051", _x_A0, _x_from, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_CombinedOut),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.052", _x_saveccm, _x_source, _x_Delegation, _x_CombinedOut).
	relation("_x_//@correspondences.12/@featureEquivalences.052", _x_A0, _x_from, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_CombinedOut),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.053", _x_saveccm, _x_source, _x_Delegation, _x_CombinedOut).
	relation("_x_//@correspondences.12/@featureEquivalences.053", _x_A0, _x_from, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_CombinedOut),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.061", _x_saveccm, _x_source, _x_Delegation, _x_DataOut).
	relation("_x_//@correspondences.12/@featureEquivalences.061", _x_A0, _x_from, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_DataOut),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.062", _x_saveccm, _x_source, _x_Delegation, _x_DataOut).
	relation("_x_//@correspondences.12/@featureEquivalences.062", _x_A0, _x_from, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_DataOut),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.063", _x_saveccm, _x_source, _x_Delegation, _x_DataOut).
	relation("_x_//@correspondences.12/@featureEquivalences.063", _x_A0, _x_from, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_DataOut),
	metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	relation("_x_//@correspondences.12/@featureEquivalences.1",bx,bx).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.111", _x_saveccm, _x_destination, _x_Delegation, _x_DataIn).
	relation("_x_//@correspondences.12/@featureEquivalences.111", _x_A0, _x_to, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_DataIn),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.112", _x_saveccm, _x_destination, _x_Delegation, _x_DataIn).
	relation("_x_//@correspondences.12/@featureEquivalences.112", _x_A0, _x_to, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_DataIn),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.113", _x_saveccm, _x_destination, _x_Delegation, _x_DataIn).
	relation("_x_//@correspondences.12/@featureEquivalences.113", _x_A0, _x_to, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_DataIn),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.121", _x_saveccm, _x_destination, _x_Delegation, _x_TriggerIn).
	relation("_x_//@correspondences.12/@featureEquivalences.121", _x_A0, _x_to, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_TriggerIn),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.122", _x_saveccm, _x_destination, _x_Delegation, _x_TriggerIn).
	relation("_x_//@correspondences.12/@featureEquivalences.122", _x_A0, _x_to, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_TriggerIn),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.123", _x_saveccm, _x_destination, _x_Delegation, _x_TriggerIn).
	relation("_x_//@correspondences.12/@featureEquivalences.123", _x_A0, _x_to, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_TriggerIn),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.131", _x_saveccm, _x_destination, _x_Delegation, _x_CombinedIn).
	relation("_x_//@correspondences.12/@featureEquivalences.131", _x_A0, _x_to, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_CombinedIn),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.132", _x_saveccm, _x_destination, _x_Delegation, _x_CombinedIn).
	relation("_x_//@correspondences.12/@featureEquivalences.132", _x_A0, _x_to, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_CombinedIn),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.133", _x_saveccm, _x_destination, _x_Delegation, _x_CombinedIn).
	relation("_x_//@correspondences.12/@featureEquivalences.133", _x_A0, _x_to, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_CombinedIn),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.141", _x_saveccm, _x_destination, _x_Delegation, _x_TriggerOut).
	relation("_x_//@correspondences.12/@featureEquivalences.141", _x_A0, _x_to, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_TriggerOut),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.142", _x_saveccm, _x_destination, _x_Delegation, _x_TriggerOut).
	relation("_x_//@correspondences.12/@featureEquivalences.142", _x_A0, _x_to, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_TriggerOut),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.143", _x_saveccm, _x_destination, _x_Delegation, _x_TriggerOut).
	relation("_x_//@correspondences.12/@featureEquivalences.143", _x_A0, _x_to, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_TriggerOut),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.151", _x_saveccm, _x_destination, _x_Delegation, _x_CombinedOut).
	relation("_x_//@correspondences.12/@featureEquivalences.151", _x_A0, _x_to, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_CombinedOut),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.152", _x_saveccm, _x_destination, _x_Delegation, _x_CombinedOut).
	relation("_x_//@correspondences.12/@featureEquivalences.152", _x_A0, _x_to, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_CombinedOut),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.153", _x_saveccm, _x_destination, _x_Delegation, _x_CombinedOut).
	relation("_x_//@correspondences.12/@featureEquivalences.153", _x_A0, _x_to, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_CombinedOut),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.161", _x_saveccm, _x_destination, _x_Delegation, _x_DataOut).
	relation("_x_//@correspondences.12/@featureEquivalences.161", _x_A0, _x_to, _x_SABinding, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_DataOut),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.162", _x_saveccm, _x_destination, _x_Delegation, _x_DataOut).
	relation("_x_//@correspondences.12/@featureEquivalences.162", _x_A0, _x_to, _x_SABinding, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_DataOut),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.12/@featureEquivalences.163", _x_saveccm, _x_destination, _x_Delegation, _x_DataOut).
	relation("_x_//@correspondences.12/@featureEquivalences.163", _x_A0, _x_to, _x_SABinding, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_DataOut),
	metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Delegation), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SABinding), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SABinding), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Delegation), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.

	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_EquivalenceCorrespondence2",bx,bx).
relation("_x_EquivalenceCorrespondence2", _x_saveccm, _x_Delay).
relation("_x_EquivalenceCorrespondence2", _x_A0, _x_SAcomponent).
:- node(_x_saveccm, ID, _x_Delay), not node'(_x_A0, ID, _x_SAcomponent), mmt==_x_A0.
	relation("_x_//@correspondences.4/@featureEquivalences.0",bx,bx).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.4/@featureEquivalences.011", _x_saveccm, _x_offer, _x_Delay, _x_DataIn).
	relation("_x_//@correspondences.4/@featureEquivalences.011", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_DataIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delay), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delay), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.4/@featureEquivalences.021", _x_saveccm, _x_offer, _x_Delay, _x_TriggerIn).
	relation("_x_//@correspondences.4/@featureEquivalences.021", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_TriggerIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delay), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delay), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.4/@featureEquivalences.031", _x_saveccm, _x_offer, _x_Delay, _x_CombinedIn).
	relation("_x_//@correspondences.4/@featureEquivalences.031", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_CombinedIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delay), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delay), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.4/@featureEquivalences.041", _x_saveccm, _x_offer, _x_Delay, _x_TriggerOut).
	relation("_x_//@correspondences.4/@featureEquivalences.041", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_TriggerOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delay), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delay), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.4/@featureEquivalences.051", _x_saveccm, _x_offer, _x_Delay, _x_CombinedOut).
	relation("_x_//@correspondences.4/@featureEquivalences.051", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_CombinedOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delay), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delay), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.4/@featureEquivalences.061", _x_saveccm, _x_offer, _x_Delay, _x_DataOut).
	relation("_x_//@correspondences.4/@featureEquivalences.061", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_DataOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Delay), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Delay), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	relation("_x_FeatureEquivalence1",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_FeatureEquivalence1", _x_saveccm, _x_name, _x_Delay).
	relation("_x_FeatureEquivalence1", _x_A0, _x_name, _x_SAcomponent).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Delay),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAcomponent), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Delay),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAcomponent), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAcomponent),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_Delay), mmt==_x_saveccm.


	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_//@correspondences.6",bx,bx).
relation("_x_//@correspondences.6", _x_saveccm, _x_TriggerOut).
relation("_x_//@correspondences.6", _x_A0, _x_SAinterface).
:- node(_x_saveccm, ID, _x_TriggerOut), not node'(_x_A0, ID, _x_SAinterface), mmt==_x_A0.
	relation("_x_//@correspondences.6/@featureEquivalences.0",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_//@correspondences.6/@featureEquivalences.0", _x_saveccm, _x_name, _x_TriggerOut).
	relation("_x_//@correspondences.6/@featureEquivalences.0", _x_A0, _x_name, _x_SAinterface).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_TriggerOut),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_TriggerOut),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAinterface),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_TriggerOut), mmt==_x_saveccm.


	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_//@correspondences.0",bx,bx).
relation("_x_//@correspondences.0", _x_saveccm, _x_Component).
relation("_x_//@correspondences.0", _x_A0, _x_SAcomponent).
:- node(_x_saveccm, ID, _x_Component), not node'(_x_A0, ID, _x_SAcomponent), mmt==_x_A0.
	relation("_x_//@correspondences.0/@featureEquivalences.0",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_//@correspondences.0/@featureEquivalences.0", _x_saveccm, _x_name, _x_Component).
	relation("_x_//@correspondences.0/@featureEquivalences.0", _x_A0, _x_name, _x_SAcomponent).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Component),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAcomponent), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Component),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAcomponent), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAcomponent),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_Component), mmt==_x_saveccm.

	relation("_x_//@correspondences.0/@featureEquivalences.1",bx,bx).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.0/@featureEquivalences.111", _x_saveccm, _x_offer, _x_Component, _x_DataIn).
	relation("_x_//@correspondences.0/@featureEquivalences.111", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_DataIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Component), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Component), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.0/@featureEquivalences.121", _x_saveccm, _x_offer, _x_Component, _x_TriggerIn).
	relation("_x_//@correspondences.0/@featureEquivalences.121", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_TriggerIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Component), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Component), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.0/@featureEquivalences.131", _x_saveccm, _x_offer, _x_Component, _x_CombinedIn).
	relation("_x_//@correspondences.0/@featureEquivalences.131", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_CombinedIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Component), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Component), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.0/@featureEquivalences.141", _x_saveccm, _x_offer, _x_Component, _x_TriggerOut).
	relation("_x_//@correspondences.0/@featureEquivalences.141", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_TriggerOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Component), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Component), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.0/@featureEquivalences.151", _x_saveccm, _x_offer, _x_Component, _x_CombinedOut).
	relation("_x_//@correspondences.0/@featureEquivalences.151", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_CombinedOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Component), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Component), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.0/@featureEquivalences.161", _x_saveccm, _x_offer, _x_Component, _x_DataOut).
	relation("_x_//@correspondences.0/@featureEquivalences.161", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_DataOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Component), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Component), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.

	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_//@correspondences.5",bx,bx).
relation("_x_//@correspondences.5", _x_saveccm, _x_Switch).
relation("_x_//@correspondences.5", _x_A0, _x_SAconnector).
:- node(_x_saveccm, ID, _x_Switch), not node'(_x_A0, ID, _x_SAconnector), mmt==_x_A0.
:- node(_x_A0, ID, _x_SAconnector), not node'(_x_saveccm, ID, _x_Switch), mmt==_x_saveccm.
	relation("_x_//@correspondences.5/@featureEquivalences.0",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_//@correspondences.5/@featureEquivalences.0", _x_saveccm, _x_name, _x_Switch).
	relation("_x_//@correspondences.5/@featureEquivalences.0", _x_A0, _x_name, _x_SAconnector).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Switch),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAconnector), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Switch),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAconnector), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAconnector),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_Switch), mmt==_x_saveccm.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAconnector),
	prop'(_x_saveccm, ID, IDmc, _x_name, Value), not node'(_x_saveccm, IDmc, _x_Switch), mmt==_x_saveccm.

	relation("_x_//@correspondences.5/@featureEquivalences.1",bx,bx).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.5/@featureEquivalences.111", _x_saveccm, _x_offer, _x_Switch, _x_DataIn).
	relation("_x_//@correspondences.5/@featureEquivalences.111", _x_A0, _x_points, _x_SAconnector, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_DataIn),
	metaedge(_x_A0, composition, _x_points, _x_SAconnector, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Switch), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAconnector), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAconnector), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Switch), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.5/@featureEquivalences.121", _x_saveccm, _x_offer, _x_Switch, _x_TriggerIn).
	relation("_x_//@correspondences.5/@featureEquivalences.121", _x_A0, _x_points, _x_SAconnector, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_TriggerIn),
	metaedge(_x_A0, composition, _x_points, _x_SAconnector, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Switch), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAconnector), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAconnector), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Switch), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.5/@featureEquivalences.131", _x_saveccm, _x_offer, _x_Switch, _x_CombinedIn).
	relation("_x_//@correspondences.5/@featureEquivalences.131", _x_A0, _x_points, _x_SAconnector, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_CombinedIn),
	metaedge(_x_A0, composition, _x_points, _x_SAconnector, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Switch), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAconnector), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAconnector), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Switch), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.5/@featureEquivalences.141", _x_saveccm, _x_offer, _x_Switch, _x_TriggerOut).
	relation("_x_//@correspondences.5/@featureEquivalences.141", _x_A0, _x_points, _x_SAconnector, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_TriggerOut),
	metaedge(_x_A0, composition, _x_points, _x_SAconnector, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Switch), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAconnector), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAconnector), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Switch), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.5/@featureEquivalences.151", _x_saveccm, _x_offer, _x_Switch, _x_CombinedOut).
	relation("_x_//@correspondences.5/@featureEquivalences.151", _x_A0, _x_points, _x_SAconnector, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_CombinedOut),
	metaedge(_x_A0, composition, _x_points, _x_SAconnector, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Switch), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAconnector), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAconnector), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Switch), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.5/@featureEquivalences.161", _x_saveccm, _x_offer, _x_Switch, _x_DataOut).
	relation("_x_//@correspondences.5/@featureEquivalences.161", _x_A0, _x_points, _x_SAconnector, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_DataOut),
	metaedge(_x_A0, composition, _x_points, _x_SAconnector, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Switch), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAconnector), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAconnector), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Switch), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.

	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_//@correspondences.7",bx,bx).
relation("_x_//@correspondences.7", _x_saveccm, _x_TriggerIn).
relation("_x_//@correspondences.7", _x_A0, _x_SAinterface).
:- node(_x_saveccm, ID, _x_TriggerIn), not node'(_x_A0, ID, _x_SAinterface), mmt==_x_A0.
	relation("_x_//@correspondences.7/@featureEquivalences.0",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_//@correspondences.7/@featureEquivalences.0", _x_saveccm, _x_name, _x_TriggerIn).
	relation("_x_//@correspondences.7/@featureEquivalences.0", _x_A0, _x_name, _x_SAinterface).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_TriggerIn),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_TriggerIn),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAinterface),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_TriggerIn), mmt==_x_saveccm.


	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_//@correspondences.8",bx,bx).
relation("_x_//@correspondences.8", _x_saveccm, _x_DataIn).
relation("_x_//@correspondences.8", _x_A0, _x_SAinterface).
:- node(_x_saveccm, ID, _x_DataIn), not node'(_x_A0, ID, _x_SAinterface), mmt==_x_A0.
	relation("_x_//@correspondences.8/@featureEquivalences.0",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_//@correspondences.8/@featureEquivalences.0", _x_saveccm, _x_name, _x_DataIn).
	relation("_x_//@correspondences.8/@featureEquivalences.0", _x_A0, _x_name, _x_SAinterface).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_DataIn),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_DataIn),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAinterface),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_DataIn), mmt==_x_saveccm.


	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_//@correspondences.10",bx,bx).
relation("_x_//@correspondences.10", _x_saveccm, _x_CombinedIn).
relation("_x_//@correspondences.10", _x_A0, _x_SAinterface).
:- node(_x_saveccm, ID, _x_CombinedIn), not node'(_x_A0, ID, _x_SAinterface), mmt==_x_A0.
	relation("_x_//@correspondences.10/@featureEquivalences.0",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_//@correspondences.10/@featureEquivalences.0", _x_saveccm, _x_name, _x_CombinedIn).
	relation("_x_//@correspondences.10/@featureEquivalences.0", _x_A0, _x_name, _x_SAinterface).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_CombinedIn),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_CombinedIn),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAinterface),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_CombinedIn), mmt==_x_saveccm.


	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_EquivalenceCorrespondence3",bx,bx).
relation("_x_EquivalenceCorrespondence3", _x_saveccm, _x_Composite).
relation("_x_EquivalenceCorrespondence3", _x_A0, _x_SAcomponent).
:- node(_x_saveccm, ID, _x_Composite), not node'(_x_A0, ID, _x_SAcomponent), mmt==_x_A0.
	relation("_x_//@correspondences.2/@featureEquivalences.0",bx,bx).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.2/@featureEquivalences.011", _x_saveccm, _x_offer, _x_Composite, _x_DataIn).
	relation("_x_//@correspondences.2/@featureEquivalences.011", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_DataIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Composite), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Composite), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.2/@featureEquivalences.021", _x_saveccm, _x_offer, _x_Composite, _x_TriggerIn).
	relation("_x_//@correspondences.2/@featureEquivalences.021", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_TriggerIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Composite), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Composite), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.2/@featureEquivalences.031", _x_saveccm, _x_offer, _x_Composite, _x_CombinedIn).
	relation("_x_//@correspondences.2/@featureEquivalences.031", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_CombinedIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Composite), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Composite), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.2/@featureEquivalences.041", _x_saveccm, _x_offer, _x_Composite, _x_TriggerOut).
	relation("_x_//@correspondences.2/@featureEquivalences.041", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_TriggerOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Composite), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Composite), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.2/@featureEquivalences.051", _x_saveccm, _x_offer, _x_Composite, _x_CombinedOut).
	relation("_x_//@correspondences.2/@featureEquivalences.051", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_CombinedOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Composite), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Composite), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.2/@featureEquivalences.061", _x_saveccm, _x_offer, _x_Composite, _x_DataOut).
	relation("_x_//@correspondences.2/@featureEquivalences.061", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_DataOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Composite), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Composite), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	relation("_x_FeatureEquivalence2",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_FeatureEquivalence2", _x_saveccm, _x_name, _x_Composite).
	relation("_x_FeatureEquivalence2", _x_A0, _x_name, _x_SAcomponent).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Composite),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAcomponent), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Composite),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAcomponent), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAcomponent),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_Composite), mmt==_x_saveccm.


	%%%% node 2 node (Left2RightCorrespondence) %%%%
relation("_x_//@correspondences.131",_x_saveccm,_x_A0).
relation("_x_//@correspondences.131", _x_saveccm, _x_Connection).
relation("_x_//@correspondences.131", _x_A0, _x_SAchannel).
:- node(_x_saveccm, ID, _x_Connection), not node'(_x_A0, ID, _x_SAchannel), mmt==_x_A0.
:- node(_x_A0, ID, _x_SAchannel), node'(_x_saveccm, ID, _x_Connection), mmt==_x_saveccm.
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.0",_x_saveccm,_x_A0).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.011", _x_saveccm, _x_source, _x_Connection, _x_DataIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.011", _x_A0, _x_from, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_DataIn),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.012", _x_saveccm, _x_source, _x_Connection, _x_DataIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.012", _x_A0, _x_from, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_DataIn),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.013", _x_saveccm, _x_source, _x_Connection, _x_DataIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.013", _x_A0, _x_from, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_DataIn),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.021", _x_saveccm, _x_source, _x_Connection, _x_TriggerIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.021", _x_A0, _x_from, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_TriggerIn),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.022", _x_saveccm, _x_source, _x_Connection, _x_TriggerIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.022", _x_A0, _x_from, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_TriggerIn),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.023", _x_saveccm, _x_source, _x_Connection, _x_TriggerIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.023", _x_A0, _x_from, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_TriggerIn),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.031", _x_saveccm, _x_source, _x_Connection, _x_CombinedIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.031", _x_A0, _x_from, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_CombinedIn),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.032", _x_saveccm, _x_source, _x_Connection, _x_CombinedIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.032", _x_A0, _x_from, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_CombinedIn),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.033", _x_saveccm, _x_source, _x_Connection, _x_CombinedIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.033", _x_A0, _x_from, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_CombinedIn),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.041", _x_saveccm, _x_source, _x_Connection, _x_TriggerOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.041", _x_A0, _x_from, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_TriggerOut),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.042", _x_saveccm, _x_source, _x_Connection, _x_TriggerOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.042", _x_A0, _x_from, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_TriggerOut),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.043", _x_saveccm, _x_source, _x_Connection, _x_TriggerOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.043", _x_A0, _x_from, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_TriggerOut),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.051", _x_saveccm, _x_source, _x_Connection, _x_CombinedOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.051", _x_A0, _x_from, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_CombinedOut),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.052", _x_saveccm, _x_source, _x_Connection, _x_CombinedOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.052", _x_A0, _x_from, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_CombinedOut),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.053", _x_saveccm, _x_source, _x_Connection, _x_CombinedOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.053", _x_A0, _x_from, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_CombinedOut),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.061", _x_saveccm, _x_source, _x_Connection, _x_DataOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.061", _x_A0, _x_from, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_DataOut),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.062", _x_saveccm, _x_source, _x_Connection, _x_DataOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.062", _x_A0, _x_from, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_DataOut),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.063", _x_saveccm, _x_source, _x_Connection, _x_DataOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.063", _x_A0, _x_from, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_from, IDS, IDT),
	edge(_x_saveccm, ID, _x_source, IDS, IDT),
	metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_DataOut),
	metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_source, IDS, IDT),
	edge(_x_A0, ID, _x_from, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.1",_x_saveccm,_x_A0).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.111", _x_saveccm, _x_destination, _x_Connection, _x_DataIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.111", _x_A0, _x_to, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_DataIn),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.112", _x_saveccm, _x_destination, _x_Connection, _x_DataIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.112", _x_A0, _x_to, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_DataIn),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.113", _x_saveccm, _x_destination, _x_Connection, _x_DataIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.113", _x_A0, _x_to, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_DataIn),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.121", _x_saveccm, _x_destination, _x_Connection, _x_TriggerIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.121", _x_A0, _x_to, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_TriggerIn),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.122", _x_saveccm, _x_destination, _x_Connection, _x_TriggerIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.122", _x_A0, _x_to, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_TriggerIn),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.123", _x_saveccm, _x_destination, _x_Connection, _x_TriggerIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.123", _x_A0, _x_to, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_TriggerIn),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.131", _x_saveccm, _x_destination, _x_Connection, _x_CombinedIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.131", _x_A0, _x_to, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_CombinedIn),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.132", _x_saveccm, _x_destination, _x_Connection, _x_CombinedIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.132", _x_A0, _x_to, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_CombinedIn),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.133", _x_saveccm, _x_destination, _x_Connection, _x_CombinedIn).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.133", _x_A0, _x_to, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_CombinedIn),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.141", _x_saveccm, _x_destination, _x_Connection, _x_TriggerOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.141", _x_A0, _x_to, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_TriggerOut),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.142", _x_saveccm, _x_destination, _x_Connection, _x_TriggerOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.142", _x_A0, _x_to, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_TriggerOut),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.143", _x_saveccm, _x_destination, _x_Connection, _x_TriggerOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.143", _x_A0, _x_to, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_TriggerOut),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.151", _x_saveccm, _x_destination, _x_Connection, _x_CombinedOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.151", _x_A0, _x_to, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_CombinedOut),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.152", _x_saveccm, _x_destination, _x_Connection, _x_CombinedOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.152", _x_A0, _x_to, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_CombinedOut),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.153", _x_saveccm, _x_destination, _x_Connection, _x_CombinedOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.153", _x_A0, _x_to, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_CombinedOut),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.161", _x_saveccm, _x_destination, _x_Connection, _x_DataOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.161", _x_A0, _x_to, _x_SAchannel, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_DataOut),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.162", _x_saveccm, _x_destination, _x_Connection, _x_DataOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.162", _x_A0, _x_to, _x_SAchannel, _x_SAconnector).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_DataOut),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAconnector),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAconnector), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAconnector),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.163", _x_saveccm, _x_destination, _x_Connection, _x_DataOut).
	relation("_x_//@correspondences.13/@right.0/@featureEquivalences.163", _x_A0, _x_to, _x_SAchannel, _x_SAcomponent).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_to, IDS, IDT),
	edge(_x_saveccm, ID, _x_destination, IDS, IDT),
	metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_DataOut),
	metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAcomponent),
	node(_x_saveccm, IDS, _x_Connection), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAchannel), node'(_x_A0, IDT, _x_SAcomponent), mmt==_x_A0.
	:- edge'(_x_saveccm, ID, _x_destination, IDS, IDT),
	edge(_x_A0, ID, _x_to, IDS, IDT),
	node(_x_A0, IDS, _x_SAchannel), node(_x_A0, IDT, _x_SAcomponent),
	node'(_x_saveccm, IDS, _x_Connection), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.
	%%%% node 2 prop %%%%
	relation("_x_//@correspondences.13/@right.0/@constantBindings.0", _x_saveccm, _x_Connection).
	relation("_x_//@correspondences.13/@right.0/@constantBindings.0", _x_A0, _x_navigability, "_x_#unidirectional", _x_SAchannel).
	%% for each node, prop' must be generated
	:- node(_x_saveccm, ID, _x_Connection),
	not prop'(_x_A0, ID, ID, _x_navigability, "_x_#unidirectional"), node'(_x_A0, ID, _x_SAchannel), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- node(_x_saveccm, ID, _x_Connection),
	not node'(_x_A0, ID, _x_SAchannel),
	prop'(_x_A0, ID, ID, _x_navigability,"_x_#unidirectional"), mmt==_x_A0.

	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_//@correspondences.11",bx,bx).
relation("_x_//@correspondences.11", _x_saveccm, _x_CombinedOut).
relation("_x_//@correspondences.11", _x_A0, _x_SAinterface).
:- node(_x_saveccm, ID, _x_CombinedOut), not node'(_x_A0, ID, _x_SAinterface), mmt==_x_A0.
	relation("_x_//@correspondences.11/@featureEquivalences.0",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_//@correspondences.11/@featureEquivalences.0", _x_saveccm, _x_name, _x_CombinedOut).
	relation("_x_//@correspondences.11/@featureEquivalences.0", _x_A0, _x_name, _x_SAinterface).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_CombinedOut),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_CombinedOut),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAinterface), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAinterface),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_CombinedOut), mmt==_x_saveccm.


	%%%% node 2 node (EquivalenceCorrespondence) %%%%
relation("_x_//@correspondences.1",bx,bx).
relation("_x_//@correspondences.1", _x_saveccm, _x_Assembly).
relation("_x_//@correspondences.1", _x_A0, _x_SAcomponent).
:- node(_x_saveccm, ID, _x_Assembly), not node'(_x_A0, ID, _x_SAcomponent), mmt==_x_A0.
	relation("_x_//@correspondences.1/@featureEquivalences.0",bx,bx).
	%%%% prop 2 prop %%%%
	relation("_x_//@correspondences.1/@featureEquivalences.0", _x_saveccm, _x_name, _x_Assembly).
	relation("_x_//@correspondences.1/@featureEquivalences.0", _x_A0, _x_name, _x_SAcomponent).
	%% for each prop, prop' must be generated
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Assembly),
	not prop'(_x_A0, ID, IDmc, _x_name, Value), node'(_x_A0, IDmc, _x_SAcomponent), mmt==_x_A0.
	%% if node' exists, then a prop' must be generated for each prop
	:- prop(_x_saveccm, ID, IDmc, _x_name, Value),
	node(_x_saveccm, IDmc, _x_Assembly),
	prop'(_x_A0, ID, IDmc, _x_name, Value), not node'(_x_A0, IDmc, _x_SAcomponent), mmt==_x_A0.
	%% for each prop, prop' must exist
	:- prop(_x_A0, ID, IDmc, _x_name, Value),
	node(_x_A0, IDmc, _x_SAcomponent),
	not prop'(_x_saveccm, ID, IDmc, _x_name, Value), node'(_x_saveccm, IDmc, _x_Assembly), mmt==_x_saveccm.

	relation("_x_//@correspondences.1/@featureEquivalences.1",bx,bx).
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.1/@featureEquivalences.111", _x_saveccm, _x_offer, _x_Assembly, _x_DataIn).
	relation("_x_//@correspondences.1/@featureEquivalences.111", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_DataIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Assembly), node(_x_saveccm, IDT, _x_DataIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Assembly), node'(_x_saveccm, IDT, _x_DataIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.1/@featureEquivalences.121", _x_saveccm, _x_offer, _x_Assembly, _x_TriggerIn).
	relation("_x_//@correspondences.1/@featureEquivalences.121", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_TriggerIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Assembly), node(_x_saveccm, IDT, _x_TriggerIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Assembly), node'(_x_saveccm, IDT, _x_TriggerIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.1/@featureEquivalences.131", _x_saveccm, _x_offer, _x_Assembly, _x_CombinedIn).
	relation("_x_//@correspondences.1/@featureEquivalences.131", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_CombinedIn),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Assembly), node(_x_saveccm, IDT, _x_CombinedIn),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Assembly), node'(_x_saveccm, IDT, _x_CombinedIn), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.1/@featureEquivalences.141", _x_saveccm, _x_offer, _x_Assembly, _x_TriggerOut).
	relation("_x_//@correspondences.1/@featureEquivalences.141", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_TriggerOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Assembly), node(_x_saveccm, IDT, _x_TriggerOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Assembly), node'(_x_saveccm, IDT, _x_TriggerOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.1/@featureEquivalences.151", _x_saveccm, _x_offer, _x_Assembly, _x_CombinedOut).
	relation("_x_//@correspondences.1/@featureEquivalences.151", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_CombinedOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Assembly), node(_x_saveccm, IDT, _x_CombinedOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Assembly), node'(_x_saveccm, IDT, _x_CombinedOut), mmt==_x_saveccm.
	%%%% edge 2 edge %%%%
	relation("_x_//@correspondences.1/@featureEquivalences.161", _x_saveccm, _x_offer, _x_Assembly, _x_DataOut).
	relation("_x_//@correspondences.1/@featureEquivalences.161", _x_A0, _x_points, _x_SAcomponent, _x_SAinterface).
	%% for each edge, edge' must be created
	:- not edge'(_x_A0, ID, _x_points, IDS, IDT),
	edge(_x_saveccm, ID, _x_offer, IDS, IDT),
	metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_DataOut),
	metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface),
	node(_x_saveccm, IDS, _x_Assembly), node(_x_saveccm, IDT, _x_DataOut),
	node'(_x_A0, IDS, _x_SAcomponent), node'(_x_A0, IDT, _x_SAinterface), mmt==_x_A0.
	:- not edge'(_x_saveccm, ID, _x_offer, IDS, IDT),
	edge(_x_A0, ID, _x_points, IDS, IDT),
	node(_x_A0, IDS, _x_SAcomponent), node(_x_A0, IDT, _x_SAinterface),
	node'(_x_saveccm, IDS, _x_Assembly), node'(_x_saveccm, IDT, _x_DataOut), mmt==_x_saveccm.

:- node(_x_A0, ID, _x_SAcomponent), node'(_x_saveccm, ID, Node1), node'(_x_saveccm, ID, Node2),
	relation(R1, _x_saveccm, Node1),
	relation(R1, _x_A0, _x_SAcomponent),
	relation(R2, _x_saveccm, Node2),
	relation(R2, _x_A0, _x_SAcomponent),
	Node1 != Node2, mmt==_x_saveccm.
:- not node'(_x_saveccm, ID, _x_Clock),
not node'(_x_saveccm, ID, _x_Delay),
not node'(_x_saveccm, ID, _x_Component),
not node'(_x_saveccm, ID, _x_Composite),
not node'(_x_saveccm, ID, _x_Assembly),
node(_x_A0, ID, _x_SAcomponent), mmt==_x_saveccm.

:- node(_x_A0, ID, _x_SAinterface), node'(_x_saveccm, ID, Node1), node'(_x_saveccm, ID, Node2),
	relation(R1, _x_saveccm, Node1),
	relation(R1, _x_A0, _x_SAinterface),
	relation(R2, _x_saveccm, Node2),
	relation(R2, _x_A0, _x_SAinterface),
	Node1 != Node2, mmt==_x_saveccm.
:- not node'(_x_saveccm, ID, _x_DataOut),
not node'(_x_saveccm, ID, _x_TriggerOut),
not node'(_x_saveccm, ID, _x_TriggerIn),
not node'(_x_saveccm, ID, _x_DataIn),
not node'(_x_saveccm, ID, _x_CombinedIn),
not node'(_x_saveccm, ID, _x_CombinedOut),
node(_x_A0, ID, _x_SAinterface), mmt==_x_saveccm.



%%%%%%%%%%% saveCCM metamodel %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
metamodel(_x_saveccm).
  metanode(_x_saveccm, _x_System).
  metanode(_x_saveccm, _x_Collection).
  metanode(_x_saveccm, _x_Assembly).
  metanode(_x_saveccm, _x_Component).
  metanode(_x_saveccm, _x_Composite).
  metanode(_x_saveccm, _x_Clock).
  metanode(_x_saveccm, _x_Delay).
  metanode(_x_saveccm, _x_Switch).
  metanode(_x_saveccm, _x_Element).
  metanode(_x_saveccm, _x_Port).
  metanode(_x_saveccm, _x_DataPort).
  metanode(_x_saveccm, _x_TriggerIn).
  metanode(_x_saveccm, _x_TriggerOut).
  metanode(_x_saveccm, _x_InDataPort).
  metanode(_x_saveccm, _x_DataIn).
  metanode(_x_saveccm, _x_DataOut).
  metanode(_x_saveccm, _x_CombinedIn).
  metanode(_x_saveccm, _x_CombinedOut).
  metanode(_x_saveccm, _x_Link).
  metanode(_x_saveccm, _x_Connection).
  metanode(_x_saveccm, _x_Delegation).
  metanode(_x_saveccm, _x_SwitchConnection).
  metanode(_x_saveccm, _x_Attribut).
  metanode(_x_saveccm, _x_Model).
  metanode(_x_saveccm, _x_Condition).
  metanode(_x_saveccm, _x_BindPort).
  metanode(_x_saveccm, _x_Named).
  metanode(_x_saveccm, _x_ConnectionComplex).
  metanode(_x_saveccm, _x_RegularConnection).

  metaprop(_x_saveccm, _x_name, _x_System).
  metaprop(_x_saveccm, _x_id, _x_System).
  metaprop(_x_saveccm, _x_name, _x_Collection).
  metaprop(_x_saveccm, _x_id, _x_Collection).
  metaprop(_x_saveccm, _x_name, _x_Assembly).
  metaprop(_x_saveccm, _x_id, _x_Assembly).
  metaprop(_x_saveccm, _x_name, _x_Component).
  metaprop(_x_saveccm, _x_id, _x_Component).
  metaprop(_x_saveccm, _x_filename, _x_Component).
  metaprop(_x_saveccm, _x_entry, _x_Component).
  metaprop(_x_saveccm, _x_name, _x_Composite).
  metaprop(_x_saveccm, _x_id, _x_Composite).
  metaprop(_x_saveccm, _x_name, _x_Clock).
  metaprop(_x_saveccm, _x_id, _x_Clock).
  metaprop(_x_saveccm, _x_period, _x_Clock).
  metaprop(_x_saveccm, _x_jitter, _x_Clock).
  metaprop(_x_saveccm, _x_body, _x_Clock).
  metaprop(_x_saveccm, _x_name, _x_Delay).
  metaprop(_x_saveccm, _x_id, _x_Delay).
  metaprop(_x_saveccm, _x_precision, _x_Delay).
  metaprop(_x_saveccm, _x_delay, _x_Delay).
  metaprop(_x_saveccm, _x_body, _x_Delay).
  metaprop(_x_saveccm, _x_name, _x_Switch).
  metaprop(_x_saveccm, _x_id, _x_Switch).
  metaprop(_x_saveccm, _x_name, _x_Element).
  metaprop(_x_saveccm, _x_id, _x_Element).
  metaprop(_x_saveccm, _x_name, _x_Port).
  metaprop(_x_saveccm, _x_id, _x_Port).
  metaprop(_x_saveccm, _x_external, _x_Port).
  metaprop(_x_saveccm, _x_name, _x_DataPort).
  metaprop(_x_saveccm, _x_id, _x_DataPort).
  metaprop(_x_saveccm, _x_external, _x_DataPort).
  metaprop(_x_saveccm, _x_type, _x_DataPort).
  metaprop(_x_saveccm, _x_value, _x_DataPort).
  metaprop(_x_saveccm, _x_name, _x_TriggerIn).
  metaprop(_x_saveccm, _x_id, _x_TriggerIn).
  metaprop(_x_saveccm, _x_external, _x_TriggerIn).
  metaprop(_x_saveccm, _x_name, _x_TriggerOut).
  metaprop(_x_saveccm, _x_id, _x_TriggerOut).
  metaprop(_x_saveccm, _x_external, _x_TriggerOut).
  metaprop(_x_saveccm, _x_name, _x_InDataPort).
  metaprop(_x_saveccm, _x_id, _x_InDataPort).
  metaprop(_x_saveccm, _x_external, _x_InDataPort).
  metaprop(_x_saveccm, _x_type, _x_InDataPort).
  metaprop(_x_saveccm, _x_value, _x_InDataPort).
  metaprop(_x_saveccm, _x_setPort, _x_InDataPort).
  metaprop(_x_saveccm, _x_name, _x_DataIn).
  metaprop(_x_saveccm, _x_id, _x_DataIn).
  metaprop(_x_saveccm, _x_external, _x_DataIn).
  metaprop(_x_saveccm, _x_type, _x_DataIn).
  metaprop(_x_saveccm, _x_value, _x_DataIn).
  metaprop(_x_saveccm, _x_setPort, _x_DataIn).
  metaprop(_x_saveccm, _x_name, _x_DataOut).
  metaprop(_x_saveccm, _x_id, _x_DataOut).
  metaprop(_x_saveccm, _x_external, _x_DataOut).
  metaprop(_x_saveccm, _x_type, _x_DataOut).
  metaprop(_x_saveccm, _x_value, _x_DataOut).
  metaprop(_x_saveccm, _x_name, _x_CombinedIn).
  metaprop(_x_saveccm, _x_id, _x_CombinedIn).
  metaprop(_x_saveccm, _x_external, _x_CombinedIn).
  metaprop(_x_saveccm, _x_type, _x_CombinedIn).
  metaprop(_x_saveccm, _x_value, _x_CombinedIn).
  metaprop(_x_saveccm, _x_setPort, _x_CombinedIn).
  metaprop(_x_saveccm, _x_name, _x_CombinedOut).
  metaprop(_x_saveccm, _x_id, _x_CombinedOut).
  metaprop(_x_saveccm, _x_external, _x_CombinedOut).
  metaprop(_x_saveccm, _x_type, _x_CombinedOut).
  metaprop(_x_saveccm, _x_value, _x_CombinedOut).
  metaprop(_x_saveccm, _x_name, _x_Attribut).
  metaprop(_x_saveccm, _x_id, _x_Attribut).
  metaprop(_x_saveccm, _x_type, _x_Attribut).
  metaprop(_x_saveccm, _x_value, _x_Attribut).
  metaprop(_x_saveccm, _x_credibility, _x_Attribut).
  metaprop(_x_saveccm, _x_type, _x_Model).
  metaprop(_x_saveccm, _x_filename, _x_Model).
  metaprop(_x_saveccm, _x_body, _x_Model).
  metaprop(_x_saveccm, _x_value, _x_Condition).
  metaprop(_x_saveccm, _x_argument, _x_BindPort).
  metaprop(_x_saveccm, _x_name, _x_Named).
  metaprop(_x_saveccm, _x_id, _x_Named).

  metaedge(_x_saveccm, composition, _x_offer, _x_System, _x_Port).
  metaedge(_x_saveccm, composition, _x_offer, _x_System, _x_DataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_System, _x_TriggerIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_System, _x_TriggerOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_System, _x_InDataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_System, _x_DataIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_System, _x_DataOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_System, _x_CombinedIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_System, _x_CombinedOut).
  metaedge(_x_saveccm, composition, _x_specifie, _x_System, _x_Attribut).
  metaedge(_x_saveccm, composition, _x_behaviour, _x_System, _x_Model).
  metaedge(_x_saveccm, composition, _x_define, _x_System, _x_ConnectionComplex).
  metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_RegularConnection).
  metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Connection).
  metaedge(_x_saveccm, composition, _x_connects, _x_System, _x_Delegation).
  metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Element).
  metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_System).
  metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Collection).
  metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Assembly).
  metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Component).
  metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Composite).
  metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Clock).
  metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Delay).
  metaedge(_x_saveccm, composition, _x_compose, _x_System, _x_Switch).
  metaedge(_x_saveccm, generalization, _x_general, _x_System, _x_Collection).
  metaedge(_x_saveccm, composition, _x_offer, _x_Collection, _x_Port).
  metaedge(_x_saveccm, composition, _x_offer, _x_Collection, _x_DataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Collection, _x_TriggerIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Collection, _x_TriggerOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Collection, _x_InDataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Collection, _x_DataIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Collection, _x_DataOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Collection, _x_CombinedIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Collection, _x_CombinedOut).
  metaedge(_x_saveccm, composition, _x_specifie, _x_Collection, _x_Attribut).
  metaedge(_x_saveccm, composition, _x_behaviour, _x_Collection, _x_Model).
  metaedge(_x_saveccm, composition, _x_define, _x_Collection, _x_ConnectionComplex).
  metaedge(_x_saveccm, composition, _x_connects, _x_Collection, _x_RegularConnection).
  metaedge(_x_saveccm, composition, _x_connects, _x_Collection, _x_Connection).
  metaedge(_x_saveccm, composition, _x_connects, _x_Collection, _x_Delegation).
  metaedge(_x_saveccm, composition, _x_compose, _x_Collection, _x_Element).
  metaedge(_x_saveccm, composition, _x_compose, _x_Collection, _x_System).
  metaedge(_x_saveccm, composition, _x_compose, _x_Collection, _x_Collection).
  metaedge(_x_saveccm, composition, _x_compose, _x_Collection, _x_Assembly).
  metaedge(_x_saveccm, composition, _x_compose, _x_Collection, _x_Component).
  metaedge(_x_saveccm, composition, _x_compose, _x_Collection, _x_Composite).
  metaedge(_x_saveccm, composition, _x_compose, _x_Collection, _x_Clock).
  metaedge(_x_saveccm, composition, _x_compose, _x_Collection, _x_Delay).
  metaedge(_x_saveccm, composition, _x_compose, _x_Collection, _x_Switch).
  metaedge(_x_saveccm, generalization, _x_general, _x_Collection, _x_Element).
  metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_Port).
  metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_DataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_TriggerIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_TriggerOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_InDataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_DataIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_DataOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_CombinedIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Assembly, _x_CombinedOut).
  metaedge(_x_saveccm, composition, _x_specifie, _x_Assembly, _x_Attribut).
  metaedge(_x_saveccm, composition, _x_behaviour, _x_Assembly, _x_Model).
  metaedge(_x_saveccm, composition, _x_define, _x_Assembly, _x_ConnectionComplex).
  metaedge(_x_saveccm, composition, _x_connects, _x_Assembly, _x_RegularConnection).
  metaedge(_x_saveccm, composition, _x_connects, _x_Assembly, _x_Connection).
  metaedge(_x_saveccm, composition, _x_connects, _x_Assembly, _x_Delegation).
  metaedge(_x_saveccm, composition, _x_compose, _x_Assembly, _x_Element).
  metaedge(_x_saveccm, composition, _x_compose, _x_Assembly, _x_System).
  metaedge(_x_saveccm, composition, _x_compose, _x_Assembly, _x_Collection).
  metaedge(_x_saveccm, composition, _x_compose, _x_Assembly, _x_Assembly).
  metaedge(_x_saveccm, composition, _x_compose, _x_Assembly, _x_Component).
  metaedge(_x_saveccm, composition, _x_compose, _x_Assembly, _x_Composite).
  metaedge(_x_saveccm, composition, _x_compose, _x_Assembly, _x_Clock).
  metaedge(_x_saveccm, composition, _x_compose, _x_Assembly, _x_Delay).
  metaedge(_x_saveccm, composition, _x_compose, _x_Assembly, _x_Switch).
  metaedge(_x_saveccm, generalization, _x_general, _x_Assembly, _x_Collection).
  metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_Port).
  metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_DataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_TriggerIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_TriggerOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_InDataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_DataIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_DataOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_CombinedIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Component, _x_CombinedOut).
  metaedge(_x_saveccm, composition, _x_specifie, _x_Component, _x_Attribut).
  metaedge(_x_saveccm, composition, _x_behaviour, _x_Component, _x_Model).
  metaedge(_x_saveccm, composition, _x_has, _x_Component, _x_BindPort).
  metaedge(_x_saveccm, generalization, _x_general, _x_Component, _x_Element).
  metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_Port).
  metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_DataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_TriggerIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_TriggerOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_InDataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_DataIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_DataOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_CombinedIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Composite, _x_CombinedOut).
  metaedge(_x_saveccm, composition, _x_specifie, _x_Composite, _x_Attribut).
  metaedge(_x_saveccm, composition, _x_behaviour, _x_Composite, _x_Model).
  metaedge(_x_saveccm, composition, _x_define, _x_Composite, _x_ConnectionComplex).
  metaedge(_x_saveccm, composition, _x_connects, _x_Composite, _x_RegularConnection).
  metaedge(_x_saveccm, composition, _x_connects, _x_Composite, _x_Connection).
  metaedge(_x_saveccm, composition, _x_connects, _x_Composite, _x_Delegation).
  metaedge(_x_saveccm, composition, _x_compose, _x_Composite, _x_Element).
  metaedge(_x_saveccm, composition, _x_compose, _x_Composite, _x_System).
  metaedge(_x_saveccm, composition, _x_compose, _x_Composite, _x_Collection).
  metaedge(_x_saveccm, composition, _x_compose, _x_Composite, _x_Assembly).
  metaedge(_x_saveccm, composition, _x_compose, _x_Composite, _x_Component).
  metaedge(_x_saveccm, composition, _x_compose, _x_Composite, _x_Composite).
  metaedge(_x_saveccm, composition, _x_compose, _x_Composite, _x_Clock).
  metaedge(_x_saveccm, composition, _x_compose, _x_Composite, _x_Delay).
  metaedge(_x_saveccm, composition, _x_compose, _x_Composite, _x_Switch).
  metaedge(_x_saveccm, generalization, _x_general, _x_Composite, _x_Collection).
  metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_Port).
  metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_DataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_TriggerIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_TriggerOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_InDataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_DataIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_DataOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_CombinedIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Clock, _x_CombinedOut).
  metaedge(_x_saveccm, composition, _x_specifie, _x_Clock, _x_Attribut).
  metaedge(_x_saveccm, composition, _x_behaviour, _x_Clock, _x_Model).
  metaedge(_x_saveccm, generalization, _x_general, _x_Clock, _x_Element).
  metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_Port).
  metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_DataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_TriggerIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_TriggerOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_InDataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_DataIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_DataOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_CombinedIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Delay, _x_CombinedOut).
  metaedge(_x_saveccm, composition, _x_specifie, _x_Delay, _x_Attribut).
  metaedge(_x_saveccm, composition, _x_behaviour, _x_Delay, _x_Model).
  metaedge(_x_saveccm, generalization, _x_general, _x_Delay, _x_Element).
  metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_Port).
  metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_DataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_TriggerIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_TriggerOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_InDataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_DataIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_DataOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_CombinedIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Switch, _x_CombinedOut).
  metaedge(_x_saveccm, composition, _x_specifie, _x_Switch, _x_Attribut).
  metaedge(_x_saveccm, composition, _x_behaviour, _x_Switch, _x_Model).
  metaedge(_x_saveccm, composition, _x_have, _x_Switch, _x_Condition).
  metaedge(_x_saveccm, composition, _x_contains, _x_Switch, _x_SwitchConnection).
  metaedge(_x_saveccm, generalization, _x_general, _x_Switch, _x_Element).
  metaedge(_x_saveccm, composition, _x_offer, _x_Element, _x_Port).
  metaedge(_x_saveccm, composition, _x_offer, _x_Element, _x_DataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Element, _x_TriggerIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Element, _x_TriggerOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Element, _x_InDataPort).
  metaedge(_x_saveccm, composition, _x_offer, _x_Element, _x_DataIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Element, _x_DataOut).
  metaedge(_x_saveccm, composition, _x_offer, _x_Element, _x_CombinedIn).
  metaedge(_x_saveccm, composition, _x_offer, _x_Element, _x_CombinedOut).
  metaedge(_x_saveccm, composition, _x_specifie, _x_Element, _x_Attribut).
  metaedge(_x_saveccm, composition, _x_behaviour, _x_Element, _x_Model).
  metaedge(_x_saveccm, generalization, _x_general, _x_Element, _x_Named).
  metaedge(_x_saveccm, generalization, _x_general, _x_Port, _x_Named).
  metaedge(_x_saveccm, generalization, _x_general, _x_DataPort, _x_Port).
  metaedge(_x_saveccm, generalization, _x_general, _x_TriggerIn, _x_Port).
  metaedge(_x_saveccm, generalization, _x_general, _x_TriggerOut, _x_Port).
  metaedge(_x_saveccm, generalization, _x_general, _x_InDataPort, _x_DataPort).
  metaedge(_x_saveccm, generalization, _x_general, _x_DataIn, _x_InDataPort).
  metaedge(_x_saveccm, generalization, _x_general, _x_DataOut, _x_DataPort).
  metaedge(_x_saveccm, generalization, _x_general, _x_CombinedIn, _x_InDataPort).
  metaedge(_x_saveccm, generalization, _x_general, _x_CombinedOut, _x_DataPort).
  metaedge(_x_saveccm, association, _x_source, _x_Link, _x_Port).
  metaedge(_x_saveccm, association, _x_source, _x_Link, _x_DataPort).
  metaedge(_x_saveccm, association, _x_source, _x_Link, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_source, _x_Link, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_source, _x_Link, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_source, _x_Link, _x_DataIn).
  metaedge(_x_saveccm, association, _x_source, _x_Link, _x_DataOut).
  metaedge(_x_saveccm, association, _x_source, _x_Link, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_source, _x_Link, _x_CombinedOut).
  metaedge(_x_saveccm, association, _x_destination, _x_Link, _x_Port).
  metaedge(_x_saveccm, association, _x_destination, _x_Link, _x_DataPort).
  metaedge(_x_saveccm, association, _x_destination, _x_Link, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_destination, _x_Link, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_destination, _x_Link, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_destination, _x_Link, _x_DataIn).
  metaedge(_x_saveccm, association, _x_destination, _x_Link, _x_DataOut).
  metaedge(_x_saveccm, association, _x_destination, _x_Link, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_destination, _x_Link, _x_CombinedOut).
  metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_Port).
  metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_DataPort).
  metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_DataIn).
  metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_DataOut).
  metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_source, _x_Connection, _x_CombinedOut).
  metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_Port).
  metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_DataPort).
  metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_DataIn).
  metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_DataOut).
  metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_destination, _x_Connection, _x_CombinedOut).
  metaedge(_x_saveccm, generalization, _x_general, _x_Connection, _x_RegularConnection).
  metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_Port).
  metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_DataPort).
  metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_DataIn).
  metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_DataOut).
  metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_source, _x_Delegation, _x_CombinedOut).
  metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_Port).
  metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_DataPort).
  metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_DataIn).
  metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_DataOut).
  metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_destination, _x_Delegation, _x_CombinedOut).
  metaedge(_x_saveccm, generalization, _x_general, _x_Delegation, _x_RegularConnection).
  metaedge(_x_saveccm, association, _x_source, _x_SwitchConnection, _x_Port).
  metaedge(_x_saveccm, association, _x_source, _x_SwitchConnection, _x_DataPort).
  metaedge(_x_saveccm, association, _x_source, _x_SwitchConnection, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_source, _x_SwitchConnection, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_source, _x_SwitchConnection, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_source, _x_SwitchConnection, _x_DataIn).
  metaedge(_x_saveccm, association, _x_source, _x_SwitchConnection, _x_DataOut).
  metaedge(_x_saveccm, association, _x_source, _x_SwitchConnection, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_source, _x_SwitchConnection, _x_CombinedOut).
  metaedge(_x_saveccm, association, _x_destination, _x_SwitchConnection, _x_Port).
  metaedge(_x_saveccm, association, _x_destination, _x_SwitchConnection, _x_DataPort).
  metaedge(_x_saveccm, association, _x_destination, _x_SwitchConnection, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_destination, _x_SwitchConnection, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_destination, _x_SwitchConnection, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_destination, _x_SwitchConnection, _x_DataIn).
  metaedge(_x_saveccm, association, _x_destination, _x_SwitchConnection, _x_DataOut).
  metaedge(_x_saveccm, association, _x_destination, _x_SwitchConnection, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_destination, _x_SwitchConnection, _x_CombinedOut).
  metaedge(_x_saveccm, generalization, _x_general, _x_SwitchConnection, _x_Link).
  metaedge(_x_saveccm, generalization, _x_general, _x_Attribut, _x_Named).
  metaedge(_x_saveccm, association, _x_conditionTo, _x_Condition, _x_SwitchConnection).
  metaedge(_x_saveccm, association, _x_conditionFrom, _x_Condition, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_conditionFrom, _x_Condition, _x_DataIn).
  metaedge(_x_saveccm, association, _x_conditionFrom, _x_Condition, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_bind, _x_BindPort, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_bind, _x_BindPort, _x_DataIn).
  metaedge(_x_saveccm, association, _x_bind, _x_BindPort, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_complexFrom, _x_ConnectionComplex, _x_Port).
  metaedge(_x_saveccm, association, _x_complexFrom, _x_ConnectionComplex, _x_DataPort).
  metaedge(_x_saveccm, association, _x_complexFrom, _x_ConnectionComplex, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_complexFrom, _x_ConnectionComplex, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_complexFrom, _x_ConnectionComplex, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_complexFrom, _x_ConnectionComplex, _x_DataIn).
  metaedge(_x_saveccm, association, _x_complexFrom, _x_ConnectionComplex, _x_DataOut).
  metaedge(_x_saveccm, association, _x_complexFrom, _x_ConnectionComplex, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_complexFrom, _x_ConnectionComplex, _x_CombinedOut).
  metaedge(_x_saveccm, association, _x_complexTo, _x_ConnectionComplex, _x_Port).
  metaedge(_x_saveccm, association, _x_complexTo, _x_ConnectionComplex, _x_DataPort).
  metaedge(_x_saveccm, association, _x_complexTo, _x_ConnectionComplex, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_complexTo, _x_ConnectionComplex, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_complexTo, _x_ConnectionComplex, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_complexTo, _x_ConnectionComplex, _x_DataIn).
  metaedge(_x_saveccm, association, _x_complexTo, _x_ConnectionComplex, _x_DataOut).
  metaedge(_x_saveccm, association, _x_complexTo, _x_ConnectionComplex, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_complexTo, _x_ConnectionComplex, _x_CombinedOut).
  metaedge(_x_saveccm, composition, _x_complex, _x_ConnectionComplex, _x_Model).
  metaedge(_x_saveccm, association, _x_source, _x_RegularConnection, _x_Port).
  metaedge(_x_saveccm, association, _x_source, _x_RegularConnection, _x_DataPort).
  metaedge(_x_saveccm, association, _x_source, _x_RegularConnection, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_source, _x_RegularConnection, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_source, _x_RegularConnection, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_source, _x_RegularConnection, _x_DataIn).
  metaedge(_x_saveccm, association, _x_source, _x_RegularConnection, _x_DataOut).
  metaedge(_x_saveccm, association, _x_source, _x_RegularConnection, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_source, _x_RegularConnection, _x_CombinedOut).
  metaedge(_x_saveccm, association, _x_destination, _x_RegularConnection, _x_Port).
  metaedge(_x_saveccm, association, _x_destination, _x_RegularConnection, _x_DataPort).
  metaedge(_x_saveccm, association, _x_destination, _x_RegularConnection, _x_TriggerIn).
  metaedge(_x_saveccm, association, _x_destination, _x_RegularConnection, _x_TriggerOut).
  metaedge(_x_saveccm, association, _x_destination, _x_RegularConnection, _x_InDataPort).
  metaedge(_x_saveccm, association, _x_destination, _x_RegularConnection, _x_DataIn).
  metaedge(_x_saveccm, association, _x_destination, _x_RegularConnection, _x_DataOut).
  metaedge(_x_saveccm, association, _x_destination, _x_RegularConnection, _x_CombinedIn).
  metaedge(_x_saveccm, association, _x_destination, _x_RegularConnection, _x_CombinedOut).
  metaedge(_x_saveccm, generalization, _x_general, _x_RegularConnection, _x_Link).



%%%%%%%%%%%%%%%%%%% A0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%

metamodel(_x_A0).
  metanode(_x_A0, _x_SAcomponent).
  metanode(_x_A0, _x_SAconnector).
  metanode(_x_A0, _x_Type).
  metanode(_x_A0, _x_SAinterface).
  metanode(_x_A0, _x_Component).
  metanode(_x_A0, _x_SAchannel).
  metanode(_x_A0, _x_Behavior).
  metanode(_x_A0, _x_Business).
  metanode(_x_A0, _x_Development).
  metanode(_x_A0, _x_Element).
  metanode(_x_A0, _x_Link).
  metanode(_x_A0, _x_ConnectableElement).
  metanode(_x_A0, _x_TypedElement).
  metanode(_x_A0, _x_PropertyHolderElement).
  metanode(_x_A0, _x_Property).
  metanode(_x_A0, _x_InteractionPoint).
  metanode(_x_A0, _x_SArelationship).
  metanode(_x_A0, _x_Architecture).
  metanode(_x_A0, _x_SoftwareArchitecture).
  metanode(_x_A0, _x_ArchitecturalElement).
  metanode(_x_A0, _x_group).
  metanode(_x_A0, _x_TypesSpecification).
  metanode(_x_A0, _x_SAtype).
  metanode(_x_A0, _x_PropertyValue).
  metanode(_x_A0, _x_SAstructuredType).
  metanode(_x_A0, _x_SABinding).
  metanode(_x_A0, _x_A0Spec).
  metanode(_x_A0, _x_StateDiagram).
  metanode(_x_A0, _x_State).
  metanode(_x_A0, _x_Transition).
  metanode(_x_A0, _x_InitialState).
  metanode(_x_A0, _x_FinalState).

  metaprop(_x_A0, _x_name, _x_SAcomponent).
  metaprop(_x_A0, _x_description, _x_SAcomponent).
  metaprop(_x_A0, _x_name, _x_SAconnector).
  metaprop(_x_A0, _x_description, _x_SAconnector).
  metaprop(_x_A0, _x_name, _x_Type).
  metaprop(_x_A0, _x_description, _x_Type).
  metaprop(_x_A0, _x_name, _x_SAinterface).
  metaprop(_x_A0, _x_description, _x_SAinterface).
  metaprop(_x_A0, _x_direction, _x_SAinterface).
  metaprop(_x_A0, _x_name, _x_Component).
  metaprop(_x_A0, _x_description, _x_Component).
  metaprop(_x_A0, _x_name, _x_SAchannel).
  metaprop(_x_A0, _x_description, _x_SAchannel).
  metaprop(_x_A0, _x_navigability, _x_SAchannel).
  metaprop(_x_A0, _x_name, _x_Behavior).
  metaprop(_x_A0, _x_description, _x_Behavior).
  metaprop(_x_A0, _x_name, _x_Business).
  metaprop(_x_A0, _x_description, _x_Business).
  metaprop(_x_A0, _x_name, _x_Development).
  metaprop(_x_A0, _x_description, _x_Development).
  metaprop(_x_A0, _x_name, _x_Element).
  metaprop(_x_A0, _x_description, _x_Element).
  metaprop(_x_A0, _x_name, _x_Link).
  metaprop(_x_A0, _x_description, _x_Link).
  metaprop(_x_A0, _x_navigability, _x_Link).
  metaprop(_x_A0, _x_name, _x_ConnectableElement).
  metaprop(_x_A0, _x_description, _x_ConnectableElement).
  metaprop(_x_A0, _x_name, _x_TypedElement).
  metaprop(_x_A0, _x_description, _x_TypedElement).
  metaprop(_x_A0, _x_name, _x_PropertyHolderElement).
  metaprop(_x_A0, _x_description, _x_PropertyHolderElement).
  metaprop(_x_A0, _x_name, _x_Property).
  metaprop(_x_A0, _x_description, _x_Property).
  metaprop(_x_A0, _x_type, _x_Property).
  metaprop(_x_A0, _x_name, _x_InteractionPoint).
  metaprop(_x_A0, _x_description, _x_InteractionPoint).
  metaprop(_x_A0, _x_name, _x_SArelationship).
  metaprop(_x_A0, _x_description, _x_SArelationship).
  metaprop(_x_A0, _x_navigability, _x_SArelationship).
  metaprop(_x_A0, _x_name, _x_Architecture).
  metaprop(_x_A0, _x_description, _x_Architecture).
  metaprop(_x_A0, _x_name, _x_SoftwareArchitecture).
  metaprop(_x_A0, _x_description, _x_SoftwareArchitecture).
  metaprop(_x_A0, _x_name, _x_ArchitecturalElement).
  metaprop(_x_A0, _x_description, _x_ArchitecturalElement).
  metaprop(_x_A0, _x_name, _x_group).
  metaprop(_x_A0, _x_description, _x_group).
  metaprop(_x_A0, _x_name, _x_TypesSpecification).
  metaprop(_x_A0, _x_description, _x_TypesSpecification).
  metaprop(_x_A0, _x_name, _x_SAtype).
  metaprop(_x_A0, _x_description, _x_SAtype).
  metaprop(_x_A0, _x_booleanValue, _x_PropertyValue).
  metaprop(_x_A0, _x_stringValue, _x_PropertyValue).
  metaprop(_x_A0, _x_floatValue, _x_PropertyValue).
  metaprop(_x_A0, _x_intValue, _x_PropertyValue).
  metaprop(_x_A0, _x_shortValue, _x_PropertyValue).
  metaprop(_x_A0, _x_longValue, _x_PropertyValue).
  metaprop(_x_A0, _x_doubleValue, _x_PropertyValue).
  metaprop(_x_A0, _x_name, _x_SAstructuredType).
  metaprop(_x_A0, _x_description, _x_SAstructuredType).
  metaprop(_x_A0, _x_name, _x_SABinding).
  metaprop(_x_A0, _x_description, _x_SABinding).
  metaprop(_x_A0, _x_navigability, _x_SABinding).
  metaprop(_x_A0, _x_name, _x_A0Spec).
  metaprop(_x_A0, _x_description, _x_A0Spec).
  metaprop(_x_A0, _x_name, _x_StateDiagram).
  metaprop(_x_A0, _x_description, _x_StateDiagram).
  metaprop(_x_A0, _x_name, _x_State).
  metaprop(_x_A0, _x_description, _x_State).
  metaprop(_x_A0, _x_name, _x_Transition).
  metaprop(_x_A0, _x_description, _x_Transition).
  metaprop(_x_A0, _x_label, _x_Transition).
  metaprop(_x_A0, _x_guard, _x_Transition).
  metaprop(_x_A0, _x_name, _x_InitialState).
  metaprop(_x_A0, _x_description, _x_InitialState).
  metaprop(_x_A0, _x_name, _x_FinalState).
  metaprop(_x_A0, _x_description, _x_FinalState).

  metaedge(_x_A0, composition, _x_development, _x_SAcomponent, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_SAcomponent, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_SAcomponent, _x_Property).
  metaedge(_x_A0, association, _x_type, _x_SAcomponent, _x_Type).
  metaedge(_x_A0, association, _x_type, _x_SAcomponent, _x_SAtype).
  metaedge(_x_A0, association, _x_type, _x_SAcomponent, _x_SAstructuredType).
  metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_InteractionPoint).
  metaedge(_x_A0, composition, _x_points, _x_SAcomponent, _x_SAinterface).
  metaedge(_x_A0, composition, _x_subArchitecture, _x_SAcomponent, _x_Architecture).
  metaedge(_x_A0, composition, _x_subArchitecture, _x_SAcomponent, _x_SoftwareArchitecture).
  metaedge(_x_A0, composition, _x_behavior, _x_SAcomponent, _x_Behavior).
  metaedge(_x_A0, composition, _x_behavior, _x_SAcomponent, _x_StateDiagram).
  metaedge(_x_A0, generalization, _x_general, _x_SAcomponent, _x_Component).
  metaedge(_x_A0, composition, _x_development, _x_SAconnector, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_SAconnector, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_SAconnector, _x_Property).
  metaedge(_x_A0, association, _x_type, _x_SAconnector, _x_Type).
  metaedge(_x_A0, association, _x_type, _x_SAconnector, _x_SAtype).
  metaedge(_x_A0, association, _x_type, _x_SAconnector, _x_SAstructuredType).
  metaedge(_x_A0, composition, _x_points, _x_SAconnector, _x_InteractionPoint).
  metaedge(_x_A0, composition, _x_points, _x_SAconnector, _x_SAinterface).
  metaedge(_x_A0, composition, _x_subArchitecture, _x_SAconnector, _x_Architecture).
  metaedge(_x_A0, composition, _x_subArchitecture, _x_SAconnector, _x_SoftwareArchitecture).
  metaedge(_x_A0, composition, _x_behavior, _x_SAconnector, _x_Behavior).
  metaedge(_x_A0, composition, _x_behavior, _x_SAconnector, _x_StateDiagram).
  metaedge(_x_A0, generalization, _x_general, _x_SAconnector, _x_Component).
  metaedge(_x_A0, composition, _x_development, _x_Type, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_Type, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_Type, _x_Property).
  metaedge(_x_A0, association, _x_implementations, _x_Type, _x_TypedElement).
  metaedge(_x_A0, association, _x_implementations, _x_Type, _x_SAcomponent).
  metaedge(_x_A0, association, _x_implementations, _x_Type, _x_SAconnector).
  metaedge(_x_A0, association, _x_implementations, _x_Type, _x_SAinterface).
  metaedge(_x_A0, association, _x_implementations, _x_Type, _x_Component).
  metaedge(_x_A0, association, _x_implementations, _x_Type, _x_SAchannel).
  metaedge(_x_A0, association, _x_implementations, _x_Type, _x_Link).
  metaedge(_x_A0, association, _x_implementations, _x_Type, _x_SArelationship).
  metaedge(_x_A0, association, _x_implementations, _x_Type, _x_ArchitecturalElement).
  metaedge(_x_A0, association, _x_implementations, _x_Type, _x_SABinding).
  metaedge(_x_A0, association, _x_supertypes, _x_Type, _x_Type).
  metaedge(_x_A0, association, _x_supertypes, _x_Type, _x_SAtype).
  metaedge(_x_A0, association, _x_supertypes, _x_Type, _x_SAstructuredType).
  metaedge(_x_A0, association, _x_subtypes, _x_Type, _x_Type).
  metaedge(_x_A0, association, _x_subtypes, _x_Type, _x_SAtype).
  metaedge(_x_A0, association, _x_subtypes, _x_Type, _x_SAstructuredType).
  metaedge(_x_A0, generalization, _x_general, _x_Type, _x_PropertyHolderElement).
  metaedge(_x_A0, composition, _x_development, _x_SAinterface, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_SAinterface, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_SAinterface, _x_Property).
  metaedge(_x_A0, association, _x_type, _x_SAinterface, _x_Type).
  metaedge(_x_A0, association, _x_type, _x_SAinterface, _x_SAtype).
  metaedge(_x_A0, association, _x_type, _x_SAinterface, _x_SAstructuredType).
  metaedge(_x_A0, composition, _x_behavior, _x_SAinterface, _x_Behavior).
  metaedge(_x_A0, composition, _x_behavior, _x_SAinterface, _x_StateDiagram).
  metaedge(_x_A0, generalization, _x_general, _x_SAinterface, _x_InteractionPoint).
  metaedge(_x_A0, generalization, _x_general, _x_SAinterface, _x_ArchitecturalElement).
  metaedge(_x_A0, composition, _x_development, _x_Component, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_Component, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_Component, _x_Property).
  metaedge(_x_A0, association, _x_type, _x_Component, _x_Type).
  metaedge(_x_A0, association, _x_type, _x_Component, _x_SAtype).
  metaedge(_x_A0, association, _x_type, _x_Component, _x_SAstructuredType).
  metaedge(_x_A0, composition, _x_points, _x_Component, _x_InteractionPoint).
  metaedge(_x_A0, composition, _x_points, _x_Component, _x_SAinterface).
  metaedge(_x_A0, composition, _x_subArchitecture, _x_Component, _x_Architecture).
  metaedge(_x_A0, composition, _x_subArchitecture, _x_Component, _x_SoftwareArchitecture).
  metaedge(_x_A0, composition, _x_behavior, _x_Component, _x_Behavior).
  metaedge(_x_A0, composition, _x_behavior, _x_Component, _x_StateDiagram).
  metaedge(_x_A0, generalization, _x_general, _x_Component, _x_ConnectableElement).
  metaedge(_x_A0, generalization, _x_general, _x_Component, _x_ArchitecturalElement).
  metaedge(_x_A0, composition, _x_development, _x_SAchannel, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_SAchannel, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_SAchannel, _x_Property).
  metaedge(_x_A0, association, _x_type, _x_SAchannel, _x_Type).
  metaedge(_x_A0, association, _x_type, _x_SAchannel, _x_SAtype).
  metaedge(_x_A0, association, _x_type, _x_SAchannel, _x_SAstructuredType).
  metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_ConnectableElement).
  metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAcomponent).
  metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAconnector).
  metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_SAinterface).
  metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_Component).
  metaedge(_x_A0, association, _x_from, _x_SAchannel, _x_InteractionPoint).
  metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_ConnectableElement).
  metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAcomponent).
  metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAconnector).
  metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_SAinterface).
  metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_Component).
  metaedge(_x_A0, association, _x_to, _x_SAchannel, _x_InteractionPoint).
  metaedge(_x_A0, association, _x_fromContext, _x_SAchannel, _x_Component).
  metaedge(_x_A0, association, _x_fromContext, _x_SAchannel, _x_SAcomponent).
  metaedge(_x_A0, association, _x_fromContext, _x_SAchannel, _x_SAconnector).
  metaedge(_x_A0, association, _x_toContext, _x_SAchannel, _x_Component).
  metaedge(_x_A0, association, _x_toContext, _x_SAchannel, _x_SAcomponent).
  metaedge(_x_A0, association, _x_toContext, _x_SAchannel, _x_SAconnector).
  metaedge(_x_A0, generalization, _x_general, _x_SAchannel, _x_SArelationship).
  metaedge(_x_A0, composition, _x_development, _x_Behavior, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_Behavior, _x_Business).
  metaedge(_x_A0, generalization, _x_general, _x_Behavior, _x_Element).
  metaedge(_x_A0, composition, _x_development, _x_Business, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_Business, _x_Business).
  metaedge(_x_A0, generalization, _x_general, _x_Business, _x_Element).
  metaedge(_x_A0, composition, _x_development, _x_Development, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_Development, _x_Business).
  metaedge(_x_A0, generalization, _x_general, _x_Development, _x_Element).
  metaedge(_x_A0, composition, _x_development, _x_Element, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_Element, _x_Business).
  metaedge(_x_A0, composition, _x_development, _x_Link, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_Link, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_Link, _x_Property).
  metaedge(_x_A0, association, _x_type, _x_Link, _x_Type).
  metaedge(_x_A0, association, _x_type, _x_Link, _x_SAtype).
  metaedge(_x_A0, association, _x_type, _x_Link, _x_SAstructuredType).
  metaedge(_x_A0, association, _x_from, _x_Link, _x_ConnectableElement).
  metaedge(_x_A0, association, _x_from, _x_Link, _x_SAcomponent).
  metaedge(_x_A0, association, _x_from, _x_Link, _x_SAconnector).
  metaedge(_x_A0, association, _x_from, _x_Link, _x_SAinterface).
  metaedge(_x_A0, association, _x_from, _x_Link, _x_Component).
  metaedge(_x_A0, association, _x_from, _x_Link, _x_InteractionPoint).
  metaedge(_x_A0, association, _x_to, _x_Link, _x_ConnectableElement).
  metaedge(_x_A0, association, _x_to, _x_Link, _x_SAcomponent).
  metaedge(_x_A0, association, _x_to, _x_Link, _x_SAconnector).
  metaedge(_x_A0, association, _x_to, _x_Link, _x_SAinterface).
  metaedge(_x_A0, association, _x_to, _x_Link, _x_Component).
  metaedge(_x_A0, association, _x_to, _x_Link, _x_InteractionPoint).
  metaedge(_x_A0, association, _x_fromContext, _x_Link, _x_Component).
  metaedge(_x_A0, association, _x_fromContext, _x_Link, _x_SAcomponent).
  metaedge(_x_A0, association, _x_fromContext, _x_Link, _x_SAconnector).
  metaedge(_x_A0, association, _x_toContext, _x_Link, _x_Component).
  metaedge(_x_A0, association, _x_toContext, _x_Link, _x_SAcomponent).
  metaedge(_x_A0, association, _x_toContext, _x_Link, _x_SAconnector).
  metaedge(_x_A0, generalization, _x_general, _x_Link, _x_PropertyHolderElement).
  metaedge(_x_A0, generalization, _x_general, _x_Link, _x_TypedElement).
  metaedge(_x_A0, composition, _x_development, _x_ConnectableElement, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_ConnectableElement, _x_Business).
  metaedge(_x_A0, generalization, _x_general, _x_ConnectableElement, _x_Element).
  metaedge(_x_A0, composition, _x_development, _x_TypedElement, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_TypedElement, _x_Business).
  metaedge(_x_A0, association, _x_type, _x_TypedElement, _x_Type).
  metaedge(_x_A0, association, _x_type, _x_TypedElement, _x_SAtype).
  metaedge(_x_A0, association, _x_type, _x_TypedElement, _x_SAstructuredType).
  metaedge(_x_A0, generalization, _x_general, _x_TypedElement, _x_Element).
  metaedge(_x_A0, composition, _x_development, _x_PropertyHolderElement, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_PropertyHolderElement, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_PropertyHolderElement, _x_Property).
  metaedge(_x_A0, generalization, _x_general, _x_PropertyHolderElement, _x_Element).
  metaedge(_x_A0, composition, _x_development, _x_Property, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_Property, _x_Business).
  metaedge(_x_A0, composition, _x_value, _x_Property, _x_PropertyValue).
  metaedge(_x_A0, generalization, _x_general, _x_Property, _x_Element).
  metaedge(_x_A0, composition, _x_development, _x_InteractionPoint, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_InteractionPoint, _x_Business).
  metaedge(_x_A0, generalization, _x_general, _x_InteractionPoint, _x_ConnectableElement).
  metaedge(_x_A0, composition, _x_development, _x_SArelationship, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_SArelationship, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_SArelationship, _x_Property).
  metaedge(_x_A0, association, _x_type, _x_SArelationship, _x_Type).
  metaedge(_x_A0, association, _x_type, _x_SArelationship, _x_SAtype).
  metaedge(_x_A0, association, _x_type, _x_SArelationship, _x_SAstructuredType).
  metaedge(_x_A0, association, _x_from, _x_SArelationship, _x_ConnectableElement).
  metaedge(_x_A0, association, _x_from, _x_SArelationship, _x_SAcomponent).
  metaedge(_x_A0, association, _x_from, _x_SArelationship, _x_SAconnector).
  metaedge(_x_A0, association, _x_from, _x_SArelationship, _x_SAinterface).
  metaedge(_x_A0, association, _x_from, _x_SArelationship, _x_Component).
  metaedge(_x_A0, association, _x_from, _x_SArelationship, _x_InteractionPoint).
  metaedge(_x_A0, association, _x_to, _x_SArelationship, _x_ConnectableElement).
  metaedge(_x_A0, association, _x_to, _x_SArelationship, _x_SAcomponent).
  metaedge(_x_A0, association, _x_to, _x_SArelationship, _x_SAconnector).
  metaedge(_x_A0, association, _x_to, _x_SArelationship, _x_SAinterface).
  metaedge(_x_A0, association, _x_to, _x_SArelationship, _x_Component).
  metaedge(_x_A0, association, _x_to, _x_SArelationship, _x_InteractionPoint).
  metaedge(_x_A0, association, _x_fromContext, _x_SArelationship, _x_Component).
  metaedge(_x_A0, association, _x_fromContext, _x_SArelationship, _x_SAcomponent).
  metaedge(_x_A0, association, _x_fromContext, _x_SArelationship, _x_SAconnector).
  metaedge(_x_A0, association, _x_toContext, _x_SArelationship, _x_Component).
  metaedge(_x_A0, association, _x_toContext, _x_SArelationship, _x_SAcomponent).
  metaedge(_x_A0, association, _x_toContext, _x_SArelationship, _x_SAconnector).
  metaedge(_x_A0, generalization, _x_general, _x_SArelationship, _x_Link).
  metaedge(_x_A0, generalization, _x_general, _x_SArelationship, _x_ArchitecturalElement).
  metaedge(_x_A0, composition, _x_development, _x_Architecture, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_Architecture, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_Architecture, _x_Property).
  metaedge(_x_A0, composition, _x_subElement, _x_Architecture, _x_ArchitecturalElement).
  metaedge(_x_A0, composition, _x_subElement, _x_Architecture, _x_SAcomponent).
  metaedge(_x_A0, composition, _x_subElement, _x_Architecture, _x_SAconnector).
  metaedge(_x_A0, composition, _x_subElement, _x_Architecture, _x_SAinterface).
  metaedge(_x_A0, composition, _x_subElement, _x_Architecture, _x_Component).
  metaedge(_x_A0, composition, _x_subElement, _x_Architecture, _x_SAchannel).
  metaedge(_x_A0, composition, _x_subElement, _x_Architecture, _x_SArelationship).
  metaedge(_x_A0, composition, _x_subElement, _x_Architecture, _x_SABinding).
  metaedge(_x_A0, composition, _x_behavior, _x_Architecture, _x_Behavior).
  metaedge(_x_A0, composition, _x_behavior, _x_Architecture, _x_StateDiagram).
  metaedge(_x_A0, composition, _x_groups, _x_Architecture, _x_group).
  metaedge(_x_A0, composition, _x_types, _x_Architecture, _x_TypesSpecification).
  metaedge(_x_A0, generalization, _x_general, _x_Architecture, _x_PropertyHolderElement).
  metaedge(_x_A0, composition, _x_development, _x_SoftwareArchitecture, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_SoftwareArchitecture, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_SoftwareArchitecture, _x_Property).
  metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_ArchitecturalElement).
  metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAcomponent).
  metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAconnector).
  metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAinterface).
  metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_Component).
  metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SAchannel).
  metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SArelationship).
  metaedge(_x_A0, composition, _x_subElement, _x_SoftwareArchitecture, _x_SABinding).
  metaedge(_x_A0, composition, _x_behavior, _x_SoftwareArchitecture, _x_Behavior).
  metaedge(_x_A0, composition, _x_behavior, _x_SoftwareArchitecture, _x_StateDiagram).
  metaedge(_x_A0, composition, _x_groups, _x_SoftwareArchitecture, _x_group).
  metaedge(_x_A0, composition, _x_types, _x_SoftwareArchitecture, _x_TypesSpecification).
  metaedge(_x_A0, generalization, _x_general, _x_SoftwareArchitecture, _x_Architecture).
  metaedge(_x_A0, composition, _x_development, _x_ArchitecturalElement, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_ArchitecturalElement, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_ArchitecturalElement, _x_Property).
  metaedge(_x_A0, association, _x_type, _x_ArchitecturalElement, _x_Type).
  metaedge(_x_A0, association, _x_type, _x_ArchitecturalElement, _x_SAtype).
  metaedge(_x_A0, association, _x_type, _x_ArchitecturalElement, _x_SAstructuredType).
  metaedge(_x_A0, generalization, _x_general, _x_ArchitecturalElement, _x_PropertyHolderElement).
  metaedge(_x_A0, generalization, _x_general, _x_ArchitecturalElement, _x_TypedElement).
  metaedge(_x_A0, composition, _x_development, _x_group, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_group, _x_Business).
  metaedge(_x_A0, association, _x_members, _x_group, _x_Element).
  metaedge(_x_A0, association, _x_members, _x_group, _x_SAcomponent).
  metaedge(_x_A0, association, _x_members, _x_group, _x_SAconnector).
  metaedge(_x_A0, association, _x_members, _x_group, _x_Type).
  metaedge(_x_A0, association, _x_members, _x_group, _x_SAinterface).
  metaedge(_x_A0, association, _x_members, _x_group, _x_Component).
  metaedge(_x_A0, association, _x_members, _x_group, _x_SAchannel).
  metaedge(_x_A0, association, _x_members, _x_group, _x_Behavior).
  metaedge(_x_A0, association, _x_members, _x_group, _x_Business).
  metaedge(_x_A0, association, _x_members, _x_group, _x_Development).
  metaedge(_x_A0, association, _x_members, _x_group, _x_Link).
  metaedge(_x_A0, association, _x_members, _x_group, _x_ConnectableElement).
  metaedge(_x_A0, association, _x_members, _x_group, _x_TypedElement).
  metaedge(_x_A0, association, _x_members, _x_group, _x_PropertyHolderElement).
  metaedge(_x_A0, association, _x_members, _x_group, _x_Property).
  metaedge(_x_A0, association, _x_members, _x_group, _x_InteractionPoint).
  metaedge(_x_A0, association, _x_members, _x_group, _x_SArelationship).
  metaedge(_x_A0, association, _x_members, _x_group, _x_Architecture).
  metaedge(_x_A0, association, _x_members, _x_group, _x_SoftwareArchitecture).
  metaedge(_x_A0, association, _x_members, _x_group, _x_ArchitecturalElement).
  metaedge(_x_A0, association, _x_members, _x_group, _x_group).
  metaedge(_x_A0, association, _x_members, _x_group, _x_TypesSpecification).
  metaedge(_x_A0, association, _x_members, _x_group, _x_SAtype).
  metaedge(_x_A0, association, _x_members, _x_group, _x_SAstructuredType).
  metaedge(_x_A0, association, _x_members, _x_group, _x_SABinding).
  metaedge(_x_A0, association, _x_members, _x_group, _x_A0Spec).
  metaedge(_x_A0, association, _x_members, _x_group, _x_StateDiagram).
  metaedge(_x_A0, association, _x_members, _x_group, _x_State).
  metaedge(_x_A0, association, _x_members, _x_group, _x_Transition).
  metaedge(_x_A0, association, _x_members, _x_group, _x_InitialState).
  metaedge(_x_A0, association, _x_members, _x_group, _x_FinalState).
  metaedge(_x_A0, generalization, _x_general, _x_group, _x_Element).
  metaedge(_x_A0, composition, _x_development, _x_TypesSpecification, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_TypesSpecification, _x_Business).
  metaedge(_x_A0, composition, _x_types, _x_TypesSpecification, _x_Type).
  metaedge(_x_A0, composition, _x_types, _x_TypesSpecification, _x_SAtype).
  metaedge(_x_A0, composition, _x_types, _x_TypesSpecification, _x_SAstructuredType).
  metaedge(_x_A0, generalization, _x_general, _x_TypesSpecification, _x_Element).
  metaedge(_x_A0, composition, _x_development, _x_SAtype, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_SAtype, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_SAtype, _x_Property).
  metaedge(_x_A0, association, _x_implementations, _x_SAtype, _x_TypedElement).
  metaedge(_x_A0, association, _x_implementations, _x_SAtype, _x_SAcomponent).
  metaedge(_x_A0, association, _x_implementations, _x_SAtype, _x_SAconnector).
  metaedge(_x_A0, association, _x_implementations, _x_SAtype, _x_SAinterface).
  metaedge(_x_A0, association, _x_implementations, _x_SAtype, _x_Component).
  metaedge(_x_A0, association, _x_implementations, _x_SAtype, _x_SAchannel).
  metaedge(_x_A0, association, _x_implementations, _x_SAtype, _x_Link).
  metaedge(_x_A0, association, _x_implementations, _x_SAtype, _x_SArelationship).
  metaedge(_x_A0, association, _x_implementations, _x_SAtype, _x_ArchitecturalElement).
  metaedge(_x_A0, association, _x_implementations, _x_SAtype, _x_SABinding).
  metaedge(_x_A0, association, _x_supertypes, _x_SAtype, _x_Type).
  metaedge(_x_A0, association, _x_supertypes, _x_SAtype, _x_SAtype).
  metaedge(_x_A0, association, _x_supertypes, _x_SAtype, _x_SAstructuredType).
  metaedge(_x_A0, association, _x_subtypes, _x_SAtype, _x_Type).
  metaedge(_x_A0, association, _x_subtypes, _x_SAtype, _x_SAtype).
  metaedge(_x_A0, association, _x_subtypes, _x_SAtype, _x_SAstructuredType).
  metaedge(_x_A0, composition, _x_behavior, _x_SAtype, _x_Behavior).
  metaedge(_x_A0, composition, _x_behavior, _x_SAtype, _x_StateDiagram).
  metaedge(_x_A0, generalization, _x_general, _x_SAtype, _x_Type).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_Element).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_SAcomponent).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_SAconnector).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_Type).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_SAinterface).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_Component).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_SAchannel).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_Behavior).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_Business).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_Development).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_Link).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_ConnectableElement).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_TypedElement).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_PropertyHolderElement).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_Property).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_InteractionPoint).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_SArelationship).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_Architecture).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_SoftwareArchitecture).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_ArchitecturalElement).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_group).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_TypesSpecification).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_SAtype).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_SAstructuredType).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_SABinding).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_A0Spec).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_StateDiagram).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_State).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_Transition).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_InitialState).
  metaedge(_x_A0, association, _x_referenceValue, _x_PropertyValue, _x_FinalState).
  metaedge(_x_A0, composition, _x_development, _x_SAstructuredType, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_SAstructuredType, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_SAstructuredType, _x_Property).
  metaedge(_x_A0, association, _x_implementations, _x_SAstructuredType, _x_TypedElement).
  metaedge(_x_A0, association, _x_implementations, _x_SAstructuredType, _x_SAcomponent).
  metaedge(_x_A0, association, _x_implementations, _x_SAstructuredType, _x_SAconnector).
  metaedge(_x_A0, association, _x_implementations, _x_SAstructuredType, _x_SAinterface).
  metaedge(_x_A0, association, _x_implementations, _x_SAstructuredType, _x_Component).
  metaedge(_x_A0, association, _x_implementations, _x_SAstructuredType, _x_SAchannel).
  metaedge(_x_A0, association, _x_implementations, _x_SAstructuredType, _x_Link).
  metaedge(_x_A0, association, _x_implementations, _x_SAstructuredType, _x_SArelationship).
  metaedge(_x_A0, association, _x_implementations, _x_SAstructuredType, _x_ArchitecturalElement).
  metaedge(_x_A0, association, _x_implementations, _x_SAstructuredType, _x_SABinding).
  metaedge(_x_A0, association, _x_supertypes, _x_SAstructuredType, _x_Type).
  metaedge(_x_A0, association, _x_supertypes, _x_SAstructuredType, _x_SAtype).
  metaedge(_x_A0, association, _x_supertypes, _x_SAstructuredType, _x_SAstructuredType).
  metaedge(_x_A0, association, _x_subtypes, _x_SAstructuredType, _x_Type).
  metaedge(_x_A0, association, _x_subtypes, _x_SAstructuredType, _x_SAtype).
  metaedge(_x_A0, association, _x_subtypes, _x_SAstructuredType, _x_SAstructuredType).
  metaedge(_x_A0, composition, _x_behavior, _x_SAstructuredType, _x_Behavior).
  metaedge(_x_A0, composition, _x_behavior, _x_SAstructuredType, _x_StateDiagram).
  metaedge(_x_A0, composition, _x_definition, _x_SAstructuredType, _x_Architecture).
  metaedge(_x_A0, composition, _x_definition, _x_SAstructuredType, _x_SoftwareArchitecture).
  metaedge(_x_A0, generalization, _x_general, _x_SAstructuredType, _x_SAtype).
  metaedge(_x_A0, composition, _x_development, _x_SABinding, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_SABinding, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_SABinding, _x_Property).
  metaedge(_x_A0, association, _x_type, _x_SABinding, _x_Type).
  metaedge(_x_A0, association, _x_type, _x_SABinding, _x_SAtype).
  metaedge(_x_A0, association, _x_type, _x_SABinding, _x_SAstructuredType).
  metaedge(_x_A0, association, _x_from, _x_SABinding, _x_ConnectableElement).
  metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAcomponent).
  metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAconnector).
  metaedge(_x_A0, association, _x_from, _x_SABinding, _x_SAinterface).
  metaedge(_x_A0, association, _x_from, _x_SABinding, _x_Component).
  metaedge(_x_A0, association, _x_from, _x_SABinding, _x_InteractionPoint).
  metaedge(_x_A0, association, _x_to, _x_SABinding, _x_ConnectableElement).
  metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAcomponent).
  metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAconnector).
  metaedge(_x_A0, association, _x_to, _x_SABinding, _x_SAinterface).
  metaedge(_x_A0, association, _x_to, _x_SABinding, _x_Component).
  metaedge(_x_A0, association, _x_to, _x_SABinding, _x_InteractionPoint).
  metaedge(_x_A0, association, _x_fromContext, _x_SABinding, _x_Component).
  metaedge(_x_A0, association, _x_fromContext, _x_SABinding, _x_SAcomponent).
  metaedge(_x_A0, association, _x_fromContext, _x_SABinding, _x_SAconnector).
  metaedge(_x_A0, association, _x_toContext, _x_SABinding, _x_Component).
  metaedge(_x_A0, association, _x_toContext, _x_SABinding, _x_SAcomponent).
  metaedge(_x_A0, association, _x_toContext, _x_SABinding, _x_SAconnector).
  metaedge(_x_A0, generalization, _x_general, _x_SABinding, _x_SArelationship).
  metaedge(_x_A0, composition, _x_development, _x_A0Spec, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_A0Spec, _x_Business).
  metaedge(_x_A0, composition, _x_architectures, _x_A0Spec, _x_Architecture).
  metaedge(_x_A0, composition, _x_architectures, _x_A0Spec, _x_SoftwareArchitecture).
  metaedge(_x_A0, composition, _x_typesSpecs, _x_A0Spec, _x_TypesSpecification).
  metaedge(_x_A0, generalization, _x_general, _x_A0Spec, _x_Element).
  metaedge(_x_A0, composition, _x_development, _x_StateDiagram, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_StateDiagram, _x_Business).
  metaedge(_x_A0, composition, _x_ownedState, _x_StateDiagram, _x_State).
  metaedge(_x_A0, composition, _x_ownedState, _x_StateDiagram, _x_InitialState).
  metaedge(_x_A0, composition, _x_ownedState, _x_StateDiagram, _x_FinalState).
  metaedge(_x_A0, composition, _x_ownedTransition, _x_StateDiagram, _x_Transition).
  metaedge(_x_A0, generalization, _x_general, _x_StateDiagram, _x_Behavior).
  metaedge(_x_A0, composition, _x_development, _x_State, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_State, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_State, _x_Property).
  metaedge(_x_A0, association, _x_owningStateDiagram, _x_State, _x_StateDiagram).
  metaedge(_x_A0, composition, _x_subDiagram, _x_State, _x_StateDiagram).
  metaedge(_x_A0, association, _x_incoming, _x_State, _x_Transition).
  metaedge(_x_A0, association, _x_outgoing, _x_State, _x_Transition).
  metaedge(_x_A0, generalization, _x_general, _x_State, _x_PropertyHolderElement).
  metaedge(_x_A0, composition, _x_development, _x_Transition, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_Transition, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_Transition, _x_Property).
  metaedge(_x_A0, association, _x_owningStateDiagram, _x_Transition, _x_StateDiagram).
  metaedge(_x_A0, association, _x_source, _x_Transition, _x_State).
  metaedge(_x_A0, association, _x_source, _x_Transition, _x_InitialState).
  metaedge(_x_A0, association, _x_source, _x_Transition, _x_FinalState).
  metaedge(_x_A0, association, _x_target, _x_Transition, _x_State).
  metaedge(_x_A0, association, _x_target, _x_Transition, _x_InitialState).
  metaedge(_x_A0, association, _x_target, _x_Transition, _x_FinalState).
  metaedge(_x_A0, generalization, _x_general, _x_Transition, _x_PropertyHolderElement).
  metaedge(_x_A0, composition, _x_development, _x_InitialState, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_InitialState, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_InitialState, _x_Property).
  metaedge(_x_A0, association, _x_owningStateDiagram, _x_InitialState, _x_StateDiagram).
  metaedge(_x_A0, composition, _x_subDiagram, _x_InitialState, _x_StateDiagram).
  metaedge(_x_A0, association, _x_incoming, _x_InitialState, _x_Transition).
  metaedge(_x_A0, association, _x_outgoing, _x_InitialState, _x_Transition).
  metaedge(_x_A0, generalization, _x_general, _x_InitialState, _x_State).
  metaedge(_x_A0, composition, _x_development, _x_FinalState, _x_Development).
  metaedge(_x_A0, composition, _x_business, _x_FinalState, _x_Business).
  metaedge(_x_A0, composition, _x_properties, _x_FinalState, _x_Property).
  metaedge(_x_A0, association, _x_owningStateDiagram, _x_FinalState, _x_StateDiagram).
  metaedge(_x_A0, composition, _x_subDiagram, _x_FinalState, _x_StateDiagram).
  metaedge(_x_A0, association, _x_incoming, _x_FinalState, _x_Transition).
  metaedge(_x_A0, association, _x_outgoing, _x_FinalState, _x_Transition).
  metaedge(_x_A0, generalization, _x_general, _x_FinalState, _x_State).

%%%%%%%%%%%%%% MODELS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%% Target Model 1
model(m2,_x_A0).
node(_x_A0,_x_c8,_x_SAinterface).
edge(_x_A0,_x_cc4,_x_points,_x_cc3,_x_c8).
prop(_x_A0,_x_cc338,_x_cc3,_x_name,_x_Sensors).
%node(_x_A0,_x_cc3,_x_SAcomponent).

%%%% Source Model 
model(source,_x_saveccm).
node(_x_saveccm,_x_cccazz,_x_BindPort).
node(_x_saveccm,_x_c8,_x_TriggerOut).
node(_x_saveccm,_x_cc3,_x_Component).
edge(_x_saveccm,_x_cc44,_x_has,_x_cc3,_x_cccazz).
edge(_x_saveccm,_x_cc4,_x_offer,_x_cc3,_x_c8).
prop(_x_saveccm,_x_cc55,_x_cccazz,argument,_x_ciao).
prop(_x_saveccm,_x_cc338,_x_cc3,_x_name,_x_Sensors).

%%%% Traces
trace(_x_saveccm,_x_cc44,_x_has,_x_Component,_x_BindPort).
trace(_x_saveccm,_x_cc55,argument,_x_BindPort).
trace(_x_saveccm,_x_cccazz,_x_BindPort).

%%%%%%%%%%%%%%%%%%%% Traces Generation %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

is_metanode_related(MMS,MCS) :- relation(R, MMS, MCS), not relation(R,mmt,MMS), MMS!=mmt.
trace(MMS,ID,MCS) :- node(MMS,ID,MCS), not is_metanode_related(MMS,MCS),MMS!=mmt.

is_metaedge_related(MMS,Name,MMsource,MMtarget) :- relation(R,MMS,Name,MMsource,MMtarget), not relation(R,mmt,MMS), MMS!=mmt.
trace(MMS,ID,Name,MMsource,MMtarget) :- edge(MMS,ID,Name,IDMMsource,IDMMtarget), not is_metaedge_related(MMS,Name,MMsource,MMtarget),
node(MMS,IDMMsource,MMsource),node(MMS,IDMMtarget,MMtarget),MMS!=mmt.

is_metaprop_related(MMS,Name,MCS) :- relation(R,MMS,Name,MCS), not relation(R,mmt,MMS), MMS!=mmt.
trace(MMS,ID,Name,MCS) :- prop(MMS,ID,IDmc,Name,Value), not is_metaprop_related(MMS,Name,MCS),
node(MMS,IDmc,MCS),MMS!=mmt.

:- node(MMT,ID,Node1), node'(MMT,ID,Node2), metanode(MMT,Node2),  Node1!=Node2, MMT=mmt.

%%%%%%%%%%% Metamodel Target Conformance Check %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

is_target_metamodel_conform(MM,Node) :- metanode(MM,Node).
is_target_metamodel_conform(MM,Prop) :- metaprop(MM,Prop,Node).
is_target_metamodel_conform(MM,Edge) :- metaedge(MM,MetaEdge,Edge,NodeSource,NodeTarget).


%%%%%%%%%% Relations Check %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

is_related(MM,Node) :- relation(R,MM,Node), relation(R,MM2,Node2).
is_related(MM,Prop) :- relation(R,MM,Prop,Node), relation(R,MM2,Prop2,Node2).
is_related(MM,Edge) :- relation(R,MM,Edge,NodeSource,NodeTarget), relation(R,MM2,Edge2,NodeSource2,NodeTarget2).



%%%%%%%%%% Mapping Rules %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%node from node
mapping_node(MM,ID,Node) :- relation(R,MM,Node), relation(R,MM2,Node2), node(MM2,ID,Node2), MM!=MM2.

%prop from prop        
mapping_prop(MM2,ID,IDmc,Prop2,Value) :- relation(R,MM,Prop,Node), relation(R,MM2,Prop2,Node2), 
              prop(MM,ID,IDmc,Prop,Value), node(MM,IDmc,Node), MM!=MM2.

       
%edge from edge         
mapping_edge(MM,ID,Edge,IDNodeSource,IDNodeTarget) :- relation(R,MM,Edge,NodeSource,NodeTarget), 
            relation(R,MM2,Edge2,NodeSource2,NodeTarget2), 
            edge(MM2,ID,Edge2,IDNodeSource,IDNodeTarget),
            node(MM2,IDNodeSource,NodeSource2), 
            node(MM2,IDNodeTarget,NodeTarget2),
            MM!=MM2.



            
%edge from edge            
%mapping_edge(MM,ID,Edge,IDNodeSource,IDNodeTarget) :- relation(R,MM,Edge,NodeSource,NodeTarget), 
             %relation(R,MM2,Edge2,NodeSource2,NodeTarget2), 
           % edge(MM2,ID,Edge2,IDNodeSource3,IDNodeTarget3),
           % node(MM2,IDNodeSource,NodeSource4), 
           % node(MM2,IDNodeTarget,NodeTarget4),
           % metaedge(MM,MetaEdge,Edge,NodeSource4,NodeTarget4),
           % MM!=MM2.
           
% edge from node            
mapping_edge(MM,ID,Edge,ID,ID) :- relation(R,MM,Edge,NodeSource,NodeTarget), 
            relation(R,MM2,NodeSource2),
            node(MM2,ID,NodeSource2),
            metaedge(MM,MetaEdge,Edge,NodeSource,NodeTarget),
            MM!=MM2.
                       
%prop from edge            
%mapping_prop(MMT,ID,Prop,Value) :- relation(R,MMT,Prop,NodeT), relation(R,MMS,Edge,NodeS1,NodeS2),
%       edge(MMS,IDE,Edge,IDS,Value),
%       node(MMS,ID,NodeS1), node(MMS,Value,NodeS2).

%prop from node
mapping_prop(MMT,ID,ID,Prop,Value) :- relation(R,MMS,Node), relation(R,MMT,Prop,Value,NodeT), 
       node(MMS,ID,Node), metaprop(MMT, Prop,NodeT).

       
             
%edge from prop
%mapping_edge(MMT,IDS,EdgeT,IDS,IDT) :- relation(R,MMT,EdgeT,NodeT1,NodeT2), relation(R,MMS,EdgeS,NodeS1,NodeS2), 
%        prop(MMS,IDp, IDS,Prop,IDT), node(MMS,IDT,NodeT2), 
%        metaprop(MMT,Prop,NodeT1).

%node from prop
%mapping_node(MMT,ID,Node) :- relation(R,MMT,Node), relation(R,MMS,Prop,NodeS), prop(MMS,ID,IDP,Prop,ID), metaprop(MMS,Prop,NodeS).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%% Generability Check %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
												
{is_generable(MM,ID,Node)} :- mapping_node(MM,ID,Node), is_related(MM,Node), is_target_metamodel_conform(MM,Node), 
							  MM=mmt.
{is_generable(MM,ID,Prop,Value)} :- mapping_prop(MM,ID,IDmc,Prop,Value), is_related(MM,Prop), 
									is_target_metamodel_conform(MM,Prop), MM=mmt.
									
{is_generable(MM,ID,Edge,IDNodeSource,IDNodeTarget)} :- mapping_edge(MM,ID,Edge,IDNodeSource,IDNodeTarget), 

														is_related(MM,Edge), is_target_metamodel_conform(MM,Edge),MM=mmt.

%%%%%%%%% Element Generation by Transformation Rule %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

node'(MM,ID,Node) :- is_generable(MM,ID,Node), mapping_node(MM,ID,Node), MM=mmt.
prop'(MM,ID,IDmc,Prop,Value) :- is_generable(MM,ID,Prop,Value), mapping_prop(MM,ID,IDmc,Prop,Value), MM=mmt.
edge'(MM,ID,Edge,IDNodeSource,IDNodeTarget) :- is_generable(MM,ID,Edge,IDNodeSource,IDNodeTarget), 
              mapping_edge(MM,ID,Edge,IDNodeSource,IDNodeTarget), MM=mmt.

%%%%%%%%% Element Generation by Traces %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
              
node'(MM,ID,Node) :- trace(MM,ID,Node),MM=mmt.
prop'(MM,ID,IDmc,Prop,Value) :-  trace(MM,ID,Prop,MCS), prop(MM,ID,IDmc,Prop,Value), node'(MM,IDmc,MCS),MM=mmt.
edge'(MM,ID,Edge,IDNodeSource,IDNodeTarget) :-  trace(MM,ID,Edge,NodeSource,NodeTarget), edge(MM,ID,Edge,IDNodeSource,IDNodeTarget), 
											node'(MM,IDNodeSource,NodeSource), node'(MM,IDNodeTarget,NodeTarget), MM=mmt.             

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%											


#hide.

%show inherit(IDnode, PropName).
%show is_source_metamodel_conform(MM,ID,Elem).
show node'(MM,ID,Node).
show prop'(MM,ID,IDmc,Prop,Value).
show edge'(MM,ID,Edge,ID1,ID2).


show node(MM,ID,Node).
show prop(MM,ID,IDmc,Prop,Value).
show edge(MM,ID,Edge,ID1,ID2).

%show is_related(MM,Node).
%show is_meta_conforms(MM,Node).
%show mapping(MM,ID,Node,A).
%show parents(MM,ID1).

%show nodet(tl,ID,Elem).
%show edget(tl,ID,Elem,ID1,ID2).
%show ct_association(IDCNP2,IDCP).

show trace(A,B,C),trace(A,B,C,D),trace(A,B,C,D,E).


%% per ogni edge', devono esistere i nodi source e target														
%:-	edge'(MMT,ID,NameT,IDNodeSource,IDNodeTarget),not node'(MMT,IDNodeSource,NodeSource),
%	metanode(MMT,NodeSource),metaedge(MMT,Type,NameT,NodeSource,NodeTarget),
%	egde(MMS,ID,NameS,IDNodeSource,IDNodeTarget),MMT=mmt,MMS!=MMT.
	
%:-	edge'(MMT,ID,NameT,IDNodeSource,IDNodeTarget),not node'(MMT,IDNodeTarget,NodeTarget),
%	metanode(MMT,NodeTarget),metaedge(MMT,Type,NameT,NodeSource,NodeTarget),
%	egde(MMS,ID,NameS,IDNodeSource,IDNodeTarget),MMT=mmt,MMS!=MMT.